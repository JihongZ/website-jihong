---
title: "Lecture 08: Path Analysis - Introduction"
subtitle: "Multivariate Correlation Model"
author: "Jihong Zhang*, Ph.D."
institute: | 
  Educational Statistics and Research Methods (ESRM) Program*
  
  University of Arkansas
date: "2024-10-09"
date-modified: "2024-10-11"
sidebar: false
execute: 
  echo: true
  warning: false
output-location: column
code-annotations: below
highlight-style: "nord"
format: 
  uark-revealjs:
    scrollable: true
    chalkboard: true
    embed-resources: false
    code-fold: false
    number-sections: false
    footer: "ESRM 64503 - Lecture 08: Multivariate Analysis"
    slide-number: c/t
    tbl-colwidths: auto
    output-file: slides-index.html
  html: 
    page-layout: full
    toc: true
    toc-depth: 2
    toc-expand: true
    lightbox: true
    code-fold: false
    fig-align: center
---

## Outline

```{=html}
<div class="card shadow">
    <div class="ml-3 mt-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14">
            <g fill="none" fill-rule="evenodd" transform="translate(1 1)">
                <circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle>
                <circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle>
                <circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle>
            </g>
        </svg>
    </div>
    <div class="card-body">
        <h5 class="card-title">Today's Class</h5>
        <ul>
          <li>Multivariate linear models: An introduction</li>
          <li>How to form multivariate models in lavaan</li>
          <li>What parameters mean</li>
          <li>How they relate to the multivariate normal distribution</li>
        </ul>
    </div>
</div>
```

# Multivariate Models: An Introduction

## Multivariate Linear Models

-   The next set of lectures is provided to give an overview of multivariate linear models
    -   Models for **more than one** dependent/outcome variables
-   Our focus today will be on models where the DV is plausibly continuous
    -   so we’ll use error terms that are multivariate-normally distributed
    -   Not a necessity – **generalized multivariate models** are possible

## Classical vs. Contemporary Methods

-   In "classical" multivariate textbooks and classes, multivariate linear models fall under the names of **Multivariate ANOVA (MANOVA)** and multivariate regression

-   These methods rely upon least squares estimation, which:

    1.  Inadequate with missing data
    2.  Offers very limited methods of setting covariance matrix structures
    3.  Does not allow for different sets of predictor variables for each outcome
    4.  Does not give much information about model fit
    5.  Does not provide adequate model comparison procedures

-   The classical methods have been subsumed into the modern (likelihood- or Bayes-based) multivariate methods

    -   Subsume: include or absorb (something) in something else
    -   Meaning: modern methods do what classical methods do (and more)

## Contemporary Methods for Estimating Multivariate Linear Models

-   We will discuss three large classes of multivariate linear modeling methods:

    -   **Path analysis** models (typically through structural equation modeling and path analysis software)
    -   **Linear mixed** models (typically through linear models software)
    -   **Psychological network** models (typically through psychological network software)
    -   **Bayesian networks** (frequently not mentioned in the social sciences but subsume all we are doing)

-   The theory behind each is identical—the main difference is software

-   Some software does a lot (`Mplus` software is likely the most complete), but none (as of 2024) does it all

-   We will start with path analysis (via the `lavaan` package) as the modeling method is more direct, and then move to linear mixed-models software (via the `nlme` and `lme4` packages)

-   Bayesian networks will be discussed in the Bayes section of the course and will use entirely different software

## The "Curse" of Dimensionality: Shared Across Models

-   Having lots of parameters creates a number of problems

    -   Estimation issues for small sample sizes
    -   Power to detect effects
    -   Model fit issues for large numbers of outcomes

-   **Curse of dimensionality**: for multivariate normal data, there is a quadratic increase in the number of parameters as the number of outcomes increases linearly

-   To be used as an analysis model, however, a model-implied covariance structure must “fit” as well as the saturated/unstructured covariance matrix

    $$
    S \rightarrow \Sigma
    $$

## Biggest Difference From Univariate Models: Model Fit

1.  In univariate linear models, the "_model for the variance_" wasn’t much of a model; there was one variance term possible ($\sigma^2_e$) and one term estimated
    -   A **saturated** model: all variances/covariances are freely estimated without any constraints—model fit was always perfect
    -   For example, a correlation matrix of 3 variables can be estimated upto 3 parameters.
2.  In multivariate linear models, because of the number of variances/covariances, oftentimes models are not saturated for the variances
    -   Therefore, model fit becomes an issue
3.  Any non-saturated model for the variances must be shown to fit the data before being used for interpretation
    -   "Fit the data" has differing standards depending on the software used.

## Today's Example Data

-   Data are simulated based on the results reported in:

-   Sample of 350 undergraduates (229 women, 121 men)

    -   In simulation, 10% of variables were missing (using missing completely at random mechanism).

-   Make sure you install `lavaan` package

```{r}
#| eval: false
install.packages("lavaan")
```

-------


::: callout-tip
## Dictionary

1.  Prior Experience at High School Level (HSL)
2.  Prior Experience at College Level (CC)
3.  Perceived Usefulness of Mathematics (USE)
4.  Math Self-Concept (MSC)
5.  Math Anxiety (MAS)
6.  Math Self-Efficacy (MSE)
7.  Math Performance (PERF)
8.  Female (sex variable: 0 = male; 1 = female)
:::

```{r}
#| output-location: default
#| code-fold: true
library(ESRM64503)
library(kableExtra)
library(tidyverse)
library(DescTools) # Desc() allows you to quick screen data
options(digits=3)
head(dataMath)
```

----------------------

`Desc()` in package DescTools allows you to quick screen data

```{r}
#| output-location: default
#| results: hold
dim(dataMath)
Desc(dataMath[,2:8], plotit = FALSE, conf.level = FALSE)
```

## Using MVN Likelihoods in `lavaan`

> [The lavaan package](https://www.lavaan.ugent.be/) is developed by Dr. [Yves Rosseel](https://research.ugent.be/web/person/yves-rosseel-0/en) to provide useRs, researchers and teachers a free open-source, but commercial-quality package for latent variable modeling. You can use lavaan to estimate a large variety of multivariate statistical models, including **path analysis**, **confirmatory factor analysis**, **structural equation modeling** and **growth curve models**.

-   `lavaan`’s default model is a linear (mixed) model that uses ML with the multivariate normal distribution

-   ML is sometimes called a full-information method (FIML)

    -   Full information is the term used when each observation is used in a likelihood function
-   The contrast is limited information (not all observations are used; typically summary statistics are used)

```{r}
#| eval: false
#| echo: true
install.packages('lavaan')
library(lavaan)
```

```{r}
#| echo: false
library(lavaan)
```

## Revisiting Univariate Linear Regression

-   We will begin our discussion with perhaps the simplest model we will see: a univariate empty model
    -   We will use the PERF variable from our example data: Performance on a mathematics assessment
-   The empty model for PERF is:
    -   $e_{i, PERF} \sim N(0, \sigma^2_{e,PERF})$
    -   Two parameters are estimated: [$\beta_{0,PERF}$ and $\sigma^2_{e,PERF}$]{.mohu}

$$
\text{PERF}_i = \beta_{0,\color{tomato}{PERF}} + e_{i, \color{tomato}{PERF}}
$$

-   Here, the additional subscript is added to denote these terms are part of the model for the PERF variable
    -   We will need these when we get to multivariate models and path analysis

## `lavaan` Syntax: General

-   Estimating a multivariate model using `lavaan` contains three steps:
    1.  **Model building**: Build a string object including syntax for models (e.g., `model01.syntax`)
    2.  **Model fitting**: Estimate the model with observed data and save it to a *fit* object (e.g., `model01.fit <- cfa(model01.syntax, data)`)
    3.  **Model summary**: Extract the results from the *fit* object using `summary()`
-   The `lavaan` package works by taking the typical R model syntax (as from `lm()`) and putting it into a quoted character variable
    -   `lavaan` model syntax also includes other commands used to access other parts of the model (really, parts of the MVN distribution)

------------------------------------------------------------------------

-   Here are rules of `lavaan` model syntax in Model building step:
    -   `~~` indicates variance or covariance between variables on either side (`perf ~~ perf` estimates variance)
    -   `~1` indicates intercept for one variable (`perf~1`)
    -   `~` indicates LHS regresses on RHS (`perf~use`)

```{r}
#| results: hold
#| output-location: slide
## Syntax for model01
model01.syntax <- " #<1>
## Variances:
perf ~~ perf

## Means:
perf ~ 1
"
## Estimation for model01
model01.fit <- cfa(model01.syntax, data=dataMath, mimic="MPLUS", fixed.x = TRUE, estimator = "MLR") #<2>

## Print output
summary(model01.fit)
```

1.  model syntax is a string object containing our model specification
2.  We use the `cfa()` function to run the model based on the syntax. Use `?lavOptions` to find the interpretation of arguments.

## Model Parameter Estimates and Assumptions

```{r filename = "Summary of lavaan's cfa()"}
#| eval: false
Intercepts:
                   Estimate  Std.Err  z-value  P(>|z|)
    perf             13.966    0.174   80.397    0.000
Variances:
                   Estimate  Std.Err  z-value  P(>|z|)
    perf              8.751    0.756   11.581    0.000
```

-   Parameter Estimates:
    -   $\beta_{0,PERF} = 13.966$
    -   $\sigma^2_{e,PERF} = 8.751$
-   Using the model estimates, we know that:

$$
\text{PERF}_i \sim N(13.966, 8.751)
$$

-   Based on our univariate empty model, `Perf` follows a normal distribution with mean as 13.966, variance as 8.751.

```{r}
#| results: hold
mean(dataMath$perf, na.rm = TRUE)
var(dataMath$perf, na.rm = TRUE)
```

# Multivariate Correlation Models

## Model 2: Adding One More Variable to the Model

-   **Variables**: We already know how to use `lavaan` to estimate a univariate model; let's move on to model two variables as outcomes simultaneously:

    -   [Mathematics performance (perf)]{style="color:tomato;font-weight:bold;"}
    -   [Perceived Usefulness of Mathematics (use)]{style="color:tomato;font-weight:bold;"}

-   **Assumption**: We will assume both to be continuous variables (conditionally MVN)

-   **Research Question**: Are students’ performance and their perceived usefulness of mathematics significantly related?

-   Initially, we will only look at an empty model with these two variables:

    -   Empty models are baseline models
    -   We will use these to show how such models look based on the characteristics of the multivariate normal distribution
    -   We will also show the bigger picture when modeling multivariate data: how we must be sure to model the covariance matrix correctly

## Multivariate Empty Model: The Notation

-   The multivariate model for `perf` and `use` is given by two regression models, which are estimated **simultaneously**.

    -   The model for the means:

$$
\text{PERF}_i = \beta_{0,\text{PERF}}+e_{i,\text{PERF}}
$$

$$
\text{USE}_i = \beta_{0,\text{USE}}+e_{i,\text{USE}}
$$

-   As there are two variables, the error terms have a joint distribution that will be multivariate normal

    -   The model for the variances:
    
$$
\begin{bmatrix}e_{i,\text{PERF}}\\e_{i,\text{USE}}\end{bmatrix} \sim \mathbf{MVN} (\mathbf{0}=\begin{bmatrix}0\\0\end{bmatrix}, \mathbf{R}=\begin{bmatrix}\sigma^2_{e,\text{PERF}} & \sigma_{e,\text{PERF},\text{USE}}\\ \sigma_{e,\text{PERF},\text{USE}}&\sigma^2_{e,\text{USE}}\end{bmatrix})
$$

-   Each error term (diagonal elements in $\mathbf{R}$) has its own variance, but now there is a covariance between error terms
    -   We will soon see that the overall $\mathbf{R}$ matrix structure can be modified

## Data Model

-   Before showing the syntax and the results, we must first describe how the multivariate empty model implies how our data should look

-   Multivariate model with matrices: $$
    \boxed{\begin{bmatrix}\text{PERF}_i\\\text{USE}_i\end{bmatrix} =\begin{bmatrix}1&0\\0&1\end{bmatrix}\begin{bmatrix}\beta_{0,\text{PERF}}\\\beta_{0,\text{USE}}\end{bmatrix} + \begin{bmatrix}e_{i,\text{PERF}}\\e_{i,\text{USE}}\end{bmatrix}}
    $$

$$
\boxed{\mathbf{Y_i = X_iB + e_i}}
$$

-   Using expected values and linear combination rules, we can show that:

$$
\boxed{\begin{bmatrix}\text{PERF}_i\\\text{USE}_i\end{bmatrix} \sim \mathbf{MVN}_2 (\boldsymbol{\mu}_i=\begin{bmatrix}\beta_{0,\text{PERF}}\\\beta_{0,\text{USE}}\end{bmatrix}, \mathbf{V}=\begin{bmatrix}\sigma^2_{e,\text{PERF}} & \sigma_{e,\text{PERF},\text{USE}}\\ \sigma_{e,\text{PERF},\text{USE}}&\sigma^2_{e,\text{USE}}\end{bmatrix})}
$$

$$
\boxed{\mathbf{Y}_i \sim MVN_2(\mathbf{X}_i\mathbf{B},\mathbf{V}_i)}
$$

## Model 2: Multivariate Correlation Model with 2 variables

**Aim**: To untangle the simple correlation between `perf` and `use`. Note that no predictor is used to explain the variances of the two variables.

**Parameters**: The number of parameters is 5, including the two variables’ means and three variance-and-covariance components.

```{r}
model02.syntax = "
# Residual Variances:
perf ~~ perf #<1>
use ~~ use   #<2>

# Residual Covariance:
perf ~~ use   #<3>

# Means:
perf ~ 1    #<4>
use ~ 1     #<5>
"
```

1.  $\sigma^2_{e, \text{PERF}}$
2.  $\sigma^2_{e,\text{USE}}$
3.  $\sigma^2_{e, \text{PERF}, \text{USE}}$
4.  $\beta_{0, \text{PERF}}$
5.  $\beta_{0, \text{USE}}$

### Properties of this model:

-   This model is said to be **saturated**: all possible parameters are estimated. It is also called an unstructured covariance matrix.

-   No other structure for the covariance matrix can fit better (only as well as)

-   The model for the means are two simple regression models without any predictors

## Multivariate Correlation Model Results

### Output of `lavaan`

```{r}
#| output-location: default
## Estimation for model01
model02.fit <- cfa(model02.syntax, data=dataMath, mimic="MPLUS", fixed.x = TRUE, estimator = "MLR") 

## Print output
summary(model02.fit)
```

--------------------------------------


### Question: Why is the sample size different from Model 1?

Model 1: 
```

                                                  Used       Total
  Number of observations                           290         350
  Number of missing patterns                         1      
```

Model 2: 
```
                                                 Used       Total
  Number of observations                           348         350
  Number of missing patterns                         3           
```

<details>

By default, `lavaan::cfa()` uses listwise deletion. In Model 1, cases with non-NA values of `perf` remain. In Model 2, cases with both non-NA in `perf` and non-NA in `use` remain.


```{r}
table(is.na(dataMath$perf))
table(is.na(dataMath$perf) & is.na(dataMath$use))
```
</details>

------------------------------------------------------------------------

### Result: Correlation Between `PERF` and `USE`

```{r}
#| output-location: default
#| code-fold: true
#| results: hold
# Covariance Estimates
cat("Covariance Estimates: \n")
parameterestimates(model02.fit)[1:3,]

# Standardized Parameters
cat("Standardized Parameters (correlation): \n")
standardizedsolution(model02.fit)[1:3,]
```

We can verify that: Correlation matrix can be calculated with S (covariance matrix) and variance components.

$$
R = D^{-1}SD
$$

```{r}
D = matrix(c(sqrt(8.742), 0, 0,  sqrt(249.245)), nrow = 2)
S = matrix(c(8.742, 6.847, 6.847,  249.245), nrow = 2)
solve(D) %*% S %*% solve(D)
```

-   **Result of z statistic**: Students’ math performance is significantly correlated with their perceived usefulness of math (r = .147, z = 2.44, p = .015), but the correlation is weak.

----------------------------


### Result: Comparing Model with Data

```{r}
library(mvtnorm)
x = expand.grid(
  perf = seq(0, 25, .1),
  use = seq(0, 120, .1)
)
sim_dat <- cbind(
  x,
  density = dmvnorm(x, mean = c(13.959, 52.440), sigma = S)
)

  
mod2_density <- ggplot() +
  geom_contour_filled(aes(x = perf, y = use, z = density), data = sim_dat) +
  geom_point(aes(x = perf, y = use), data = dataMath, colour = "white", alpha = .5) +
  labs( x= "PERF", y="USE") +
  theme_classic() +
  theme(text = element_text(size = 20)) 
mod2_density
```

-   We can use our estimated parameters to simulate the **model-implied density plot** for `perf` and `use`, which can be compared to the observed data for `perf` and `use`.

## Mutivariate normal density function

$$
\begin{bmatrix}\text{PERF}_i\\\text{USE}_i\end{bmatrix} \sim \mathbf{N}_2 (\boldsymbol{\mu}_i=\begin{bmatrix}13.959\\52.440\end{bmatrix}, \mathbf{V}_i =\mathbf{R}=\begin{bmatrix}8.742 & 6.847\\ 6.847 & 249.245 \end{bmatrix})
$$

```{r}
#| fig-cap: "Multivariate Regression Model Estimated Density"
#| code-fold: true
#| output-location: default
library(plotly)
density_surface <- sim_dat |> 
  pivot_wider(names_from = use, values_from = density) |> 
  select(-perf) |> 
  as.matrix()
plot_ly(z = density_surface, x = seq(0, 120, .1), y = seq(0, 25, .1), colors = "PuRd", color = "green",
        width = 1600, height = 800) |> add_surface() 
```

## A Different Model for the data

-   To demonstrate how models may vary in terms of model fit (and to set up a discussion of model fit and model comparisons), we will estimate a model where we set the covariance between PERF and USE to zero.
    -   Zero covariance implies zero correlation – which is unlikely to be true given our previous analysis
-   You likely would not use this model in a real data analysis
    -   If anything, you may start with a zero covariance and then estimate one
-   But this will help to introduce some concepts needed to assess the quality of the multivariate model

## Model 3: Multivariate Empty Model with Zero Covariance

One way to double-check whether the "correlation" is important is to deliberately fix the correlation to 0 and then compare this model to the previous model to see if it gets much worse.

```{r}
model03.syntax = "
# Variances:
perf ~~ perf 
use ~~ use   

# Covariance:
perf ~~ 0*use   #<1>

# Means:
perf ~ 1  
use ~ 1   
"
```

1.  We constrain the residual covariance between `perf` and `use`, $\sigma_{e, \text{PERF}, \text{USE}} = 0$, using `0*`

```{r}
#| output-location: default
## Estimation for model01
model03.fit <- cfa(model03.syntax, data=dataMath, mimic="MPLUS", fixed.x = TRUE, estimator = "MLR") 

## Print output
parameterestimates(model03.fit) |> show_table()
```

## Model Assumption

-   The zero covariance now leads to the following assumptions about the data:

    $$
    \begin{bmatrix}\text{PERF}_i\\\text{USE}_i\end{bmatrix} \sim \mathbf{N}_2 (\boldsymbol{\mu}_i=\begin{bmatrix}13.959\\52.440\end{bmatrix}, \mathbf{V}_i =\mathbf{R}=\begin{bmatrix} 8.750 & \color{tomato}{0} \\ \color{tomato}{0} & 249.200 \end{bmatrix})
    $$

-   Because these are MVN, we are assuming PERF is independent of USE (they have zero correlation/covariance)

### Question

Is our new model (zero covariance) better- or worse-fitting compared to our previous model (freely estimated covariance)?

<details>

#### Answer

I think Model 3 is worse because of fewer parameters and stronger assumptions. We don't know yet the degree of "worse" is significant or not.

```{r}
#| output-location: default
anova(model02.fit, model03.fit)
```

</details>

## Model Results

```{r}
#| output-location: default
parameterestimates(model02.fit) |> show_table()
parameterestimates(model03.fit) |> show_table()
```

## Examining Model/Data Fit

```{r}
#| code-fold: true
#| results: hold
#| output-location: default
sim_dat_2 <- cbind(
  x,
  density = dmvnorm(x, mean = c(13.959, 52.440), 
                    sigma = matrix(c(8.750535, 0, 0, 249.200921), nrow = 2))
)

  
mod3_density <- ggplot() +
  geom_contour_filled(aes(x = perf, y = use, z = density), data = sim_dat_2) +
  geom_point(aes(x = perf, y = use), data = dataMath, colour = "white", alpha = .5) +
  labs( x= "PERF", y="USE", title = "Model 3's Density") +
  theme_classic() +
  theme(text = element_text(size = 20)) 

mod2_density
mod3_density
```

## Multivariate correlation model with three variables

- Aim: the mutual relationships between three variables are of interests.

    - Math Performance (PERF)
    
    - Math Self-Concept (MSC)
    
    - Math Self-Efficacy (MSE)

```{r}
#| output-location: default
head(dataMath[, c("perf", "msc", "mse")])
```

-------------------

![Diagram](exercise3_diagram.png)

-------------------


```{r}
#| output-location: default
model04.syntax = "
# Residual Variances:
perf ~~ perf 
msc ~~ msc   
mse ~~ mse   

# Residual Covariance:
perf ~~ msc
perf ~~ mse
msc ~~ mse

# Means:
perf ~ 1  
msc ~ 1   
mse ~ 1
"
model04.fit <- cfa(model04.syntax, data=dataMath, mimic="MPLUS", fixed.x = TRUE, estimator = "MLR")
```

---------------

### Interpret the results

What are estimated correlations, standard errors and p.values for the mutual correlations among three variables.

```{r}
#| output-location: default
standardizedsolution(model04.fit)
```


----------------

### Exercise

Assume that researchers want to investigate whether there is correlation between self-efficacy (MSE) and self-concept (MSC). If the correlation is weak enough, can we assume that these two has no relationship.

-   Which model you prefer: the new constrained model or the previous one?
-   What is estimated relationships between MSC and Perf in the new model?
-   What is estimated relationships between MSE and Perf in the new model?

-------------------------

::: panel-tabset

#### Starting code

```{r}
#| eval: false
#| output-location: default
model04b.syntax = "
# Residual Variances:
perf ~~ perf 
msc ~~ msc   
mse ~~ mse   

# Residual Covariance:
____ ~~ ____
____ ~~ ____
____ ~~ ____

# Means:
perf ~ 1  
msc ~ 1   
mse ~ 1
"
model04b.fit <- cfa(model04b.syntax, data=dataMath, mimic="MPLUS", fixed.x = TRUE, estimator = "MLR")
```

#### Answer

```{r}
#| output-location: default
model04b.syntax = "
# Residual Variances:
perf ~~ perf 
msc ~~ msc   
mse ~~ mse   

# Residual Covariance:
perf ~~ msc
perf ~~ mse
msc ~~ 0*mse

# Means:
perf ~ 1  
msc ~ 1   
mse ~ 1
"
model04b.fit <- cfa(model04b.syntax, data=dataMath, mimic="MPLUS", fixed.x = TRUE, estimator = "MLR")

standardizedsolution(model04b.fit)

anova(model04.fit, model04b.fit)
```

-   We have two evidences to prefer the previous model:
    1.   AIC and BIC for model 04b is larger than model 04. 
    2.   According to Likelihood ratio test, Model 04 is significantly better than model 04b, which means the correlation between MSE and MSC is likely to be nonzero. We prefer the model with the correlation larger than 0. 
:::


## Homework 2

1.  You can find the online form [here](https://docs.google.com/forms/d/e/1FAIpQLSe_0DWgrbEeHo_-K4fj0EWdHzH8cuTNx3dHJU6wyERbJyRPHA/viewform?usp=publish-editor).

2.  Use `lavaan` and `dataMath` to test the correlations among Math Performance (`perf`), Math Anxiety (`mas`), and Perceived Usefulness of Mathematics (`use`).

    -   Model 1: All correlations are freely estimated.
        -   **Q1/Q2/Q3**: What are the estimated correlations/SE/p.values for Performance - Anxiety, Performance - Usefulness, and Anxiety - Usefulness, respectively (the results should have two-digit precision).
        -   **Q4:** What are AIC and BIC for Model 1 (0-decimal places)
    -   Model 2: Fix the correlation between math anxiety (`mas`) and perceived usefulness of mathematics (`use`) to 0; Leave the other correlations to be freely estimated.
        -   **Q5/Q6/Q7**: What are the estimated correlations/SE/p-values for Performance - Anxiety, Performance - Usefulness, and Anxiety - Usefulness, respectively (the results should have two-digit precision)?
        -   **Q8**: What are AIC and BIC for Model 2 (0-decimal places)?
    -   **Q10**: Copy and paste your R syntax (make sure you use `lavaan` syntax)

## Wrapping Up

1.  This lecture was an introduction to the estimation of multivariate linear models for multivariate outcomes using the path analysis/SEM package `lavaan`

2.  We saw that the model for continuous data uses the multivariate normal distribution in its likelihood function

### Next Class

1.  Does each model fit the data well (absolute model fit)?
2.  If not, how can we improve model fit?
3.  Which model fits better (relative model fit)?
4.  Answers are given in the following lectures...
