{
  "hash": "14f7816f79dee5de1239f800f0f121d2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Which Country own the most Liberty Nobel Prizes? France? Ireland?\nauthors: \"Jihong Zhang\"\ndate: '2019-05-20'\ncategories:\n  - visualization\n  - blog\n  - ggplot2\n---\n\n\n> It is of my interest to use `ggplot` package to visualize some fun data. In this post, I tried to play with a Nobel Prizes Data including countries, prize year, each prize. The goal is to plot a cumulative traceplot of Liberty Nobel Prizes for top 10 countries.\n\n# Load Packages\n\n`tidyverse` package include some very useful tools such as `ggplot2`, `tidyr` and `dplyr`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(LaCroixColoR)\nlibrary(ggthemes)\nlibrary(ggimage)\n```\n:::\n\n\n`ggimage` package was used to add country flags to ggplot layer. `LaCroixColoR` package used for selecting different colors.\n\n# Data\n\nImport the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_winners <- read_csv(\"data_2019-05-14.csv\",\n                          col_types = \"dccccdccDccccccDcc\")\nstr(nobel_winners)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [969 × 18] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ prize_year          : num [1:969] 1901 1901 1901 1901 1901 ...\n $ category            : chr [1:969] \"Chemistry\" \"Literature\" \"Medicine\" \"Peace\" ...\n $ prize               : chr [1:969] \"The Nobel Prize in Chemistry 1901\" \"The Nobel Prize in Literature 1901\" \"The Nobel Prize in Physiology or Medicine 1901\" \"The Nobel Peace Prize 1901\" ...\n $ motivation          : chr [1:969] \"\\\"in recognition of the extraordinary services he has rendered by the discovery of the laws of chemical dynamic\"| __truncated__ \"\\\"in special recognition of his poetic composition, which gives evidence of lofty idealism, artistic perfection\"| __truncated__ \"\\\"for his work on serum therapy, especially its application against diphtheria, by which he has opened a new ro\"| __truncated__ NA ...\n $ prize_share         : chr [1:969] \"1/1\" \"1/1\" \"1/1\" \"1/2\" ...\n $ laureate_id         : num [1:969] 160 569 293 462 463 1 161 571 294 464 ...\n $ laureate_type       : chr [1:969] \"Individual\" \"Individual\" \"Individual\" \"Individual\" ...\n $ full_name           : chr [1:969] \"Jacobus Henricus van 't Hoff\" \"Sully Prudhomme\" \"Emil Adolf von Behring\" \"Jean Henry Dunant\" ...\n $ birth_date          : Date[1:969], format: \"1852-08-30\" \"1839-03-16\" ...\n $ birth_city          : chr [1:969] \"Rotterdam\" \"Paris\" \"Hansdorf (Lawice)\" \"Geneva\" ...\n $ birth_country       : chr [1:969] \"Netherlands\" \"France\" \"Prussia (Poland)\" \"Switzerland\" ...\n $ gender              : chr [1:969] \"Male\" \"Male\" \"Male\" \"Male\" ...\n $ organization_name   : chr [1:969] \"Berlin University\" NA \"Marburg University\" NA ...\n $ organization_city   : chr [1:969] \"Berlin\" NA \"Marburg\" NA ...\n $ organization_country: chr [1:969] \"Germany\" NA \"Germany\" NA ...\n $ death_date          : Date[1:969], format: \"1911-03-01\" \"1907-09-07\" ...\n $ death_city          : chr [1:969] \"Berlin\" \"Châtenay\" \"Marburg\" \"Heiden\" ...\n $ death_country       : chr [1:969] \"Germany\" \"France\" \"Germany\" \"Switzerland\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   prize_year = col_double(),\n  ..   category = col_character(),\n  ..   prize = col_character(),\n  ..   motivation = col_character(),\n  ..   prize_share = col_character(),\n  ..   laureate_id = col_double(),\n  ..   laureate_type = col_character(),\n  ..   full_name = col_character(),\n  ..   birth_date = col_date(format = \"\"),\n  ..   birth_city = col_character(),\n  ..   birth_country = col_character(),\n  ..   gender = col_character(),\n  ..   organization_name = col_character(),\n  ..   organization_city = col_character(),\n  ..   organization_country = col_character(),\n  ..   death_date = col_date(format = \"\"),\n  ..   death_city = col_character(),\n  ..   death_country = col_character()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n```\n\n\n:::\n\n```{.r .cell-code}\nunique(nobel_winners$category)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Chemistry\"  \"Literature\" \"Medicine\"   \"Peace\"      \"Physics\"   \n[6] \"Economics\" \n```\n\n\n:::\n:::\n\n\n`tribble` function allows to create a table by columns. `~country` will generate a new columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_countrycode <-\n  tribble(~country, ~code, \n          \"United States of America\", \"US\",\n          \"Germany\", \"DE\",\n          \"United Kingdom\", \"GB\",\n          \"France\", \"FR\",\n          \"Japan\", \"JP\",\n          \"Netherlands\", \"NL\",\n          \"Sweden\", \"SE\",\n          \"Russia\", \"RU\",\n          \"Canada\", \"CA\",\n          \"Austria\", \"AT\",\n          \"Spain\", \"ES\",\n          \"Denmark\", \"DK\",\n          \"Ireland\", \"IE\",\n          \"Italy\", \"IT\"\n          )\n```\n:::\n\n\n# Tables\n\n`pull()` function is similar to use `[]` to return the value of one column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- \n  nobel_winners %>% \n  filter(category == \"Literature\") %>% \n  count(birth_country, sort = T) %>% \n  head(n = 10) %>% # Top 10 countries\n  pull(birth_country)\n```\n:::\n\n\nAdding some columns such as the total number of Liberty Prizes (`n_prize`), the first year of prize, the last year and the cumulative prizes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_countries <- \n  nobel_winners %>% \n  filter(birth_country %in% countries, category == \"Literature\") %>% \n  select(prize_year, birth_country) %>% \n  arrange(prize_year) %>% \n  group_by(birth_country) %>% \n  mutate(n_prize = n(),\n         first_prize = min(prize_year),\n         last_prize = max(prize_year),\n         cum = row_number()\n  ) %>% \n  ungroup()\nnobel_countries\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 58 × 6\n   prize_year birth_country n_prize first_prize last_prize   cum\n        <dbl> <chr>           <int>       <dbl>      <dbl> <int>\n 1       1901 France             11        1901       2014     1\n 2       1904 France             11        1901       2014     2\n 3       1904 Spain               5        1904       1989     1\n 4       1909 Sweden              7        1909       2011     1\n 5       1915 France             11        1901       2014     3\n 6       1916 Sweden              7        1909       2011     2\n 7       1917 Denmark             4        1917       1944     1\n 8       1917 Denmark             4        1917       1944     2\n 9       1921 France             11        1901       2014     4\n10       1922 Spain               5        1904       1989     2\n# ℹ 48 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnobel_countries <- \n  nobel_countries %>% \n  filter(cum == 1) %>% \n  mutate(cum = 0) %>% \n  bind_rows(nobel_countries) %>% \n  arrange(prize_year, cum) %>% \n  mutate(birth_country = fct_reorder(birth_country, n_prize, .desc = TRUE))\nnobel_countries\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68 × 6\n   prize_year birth_country n_prize first_prize last_prize   cum\n        <dbl> <fct>           <int>       <dbl>      <dbl> <dbl>\n 1       1901 France             11        1901       2014     0\n 2       1901 France             11        1901       2014     1\n 3       1904 Spain               5        1904       1989     0\n 4       1904 Spain               5        1904       1989     1\n 5       1904 France             11        1901       2014     2\n 6       1909 Sweden              7        1909       2011     0\n 7       1909 Sweden              7        1909       2011     1\n 8       1915 France             11        1901       2014     3\n 9       1916 Sweden              7        1909       2011     2\n10       1917 Denmark             4        1917       1944     0\n# ℹ 58 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_last_nobel <- \n  nobel_countries %>% \n  select(birth_country, n_prize, first_prize, last_prize) %>% \n  mutate(birth_country = as.character(birth_country)) %>% \n  distinct() %>% \n  left_join(df_countrycode, by=c(\"birth_country\" = \"country\"))\nfirst_last_nobel\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 5\n   birth_country            n_prize first_prize last_prize code \n   <chr>                      <int>       <dbl>      <dbl> <chr>\n 1 France                        11        1901       2014 FR   \n 2 Spain                          5        1904       1989 ES   \n 3 Sweden                         7        1909       2011 SE   \n 4 Denmark                        4        1917       1944 DK   \n 5 Ireland                        3        1923       1969 IE   \n 6 Italy                          5        1926       1997 IT   \n 7 Germany                        4        1929       1972 DE   \n 8 United States of America       9        1930       2016 US   \n 9 United Kingdom                 6        1932       2005 GB   \n10 Russia                         4        1933       1970 RU   \n```\n\n\n:::\n:::\n\n\n# Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\npp1 <- ggplot(nobel_countries) +\n  aes(x = prize_year, y = cum, group = birth_country) +\n  geom_line(aes(color = birth_country)) +\n  geom_point(data = first_last_nobel, y = 0,\n             aes(x = first_prize, color =birth_country)) +\n  geom_flag(data = first_last_nobel, size = 0.03, asp= 2,\n            aes(x= last_prize, y = n_prize, image = code)) +\n  scale_color_manual(values = lacroix_palette(\"PassionFruit\", n = 10, type = \"continuous\")) +\n  scale_y_continuous(limits = c(NA, 12), breaks = c(0,3,6,9,12)) +\n  labs(title = \"Number of Liberty Nobel Prizes by Countries\",\n       color = NULL,\n       caption = \"Source: The Nobel Prize\\n@_abichat for #TidyTuesday\") +\n  theme_wsj(color = \"gray\") +\n  theme(legend.position = \"bottom\",\n        plot.caption = element_text(size = 10, family = \"Georgia\"),\n        plot.title = element_text(size = 18, family = \"Andale Mono\"),\n        legend.text =  element_text(family = \"Georgia\")\n        )\n\npp1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave(\"~/图片/plot_2019-05-14.png\", width = 29, height = 21, units = \"cm\", dpi = \"retina\")\n```\n:::\n\n\n# Animation\n\nFinally, let's use `gganimate` package to add some animation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gganimate)\npp1 +\n  transition_reveal(prize_year)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.gif)\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}