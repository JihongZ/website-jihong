{
  "hash": "2706e8dcbfac7367de27c0ad5032041d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: '2018-2022年教育期刊的引用数可视化'\nauthor: 学徒\ndate: '2019-12-31'\ndate-modified: '2024-03-03'\nexecute: \n  eval: true\ncategories:\n  - 教程\n---\n\n\n> (2019's Summary) 简单的描述一下，和教育相关的意外只有Review of Educational Research。还有令我意外的是，Journal of Mixed Methods Research也有上榜，看来纯方法的期刊也可以拥有超高应用数。原因之一大概是mixed method在社会科学的统治地位。总的来说，霸榜最久的是MMWR (Morbidity and mortality weekly report)以及National vital statistics reports。另外，用R做gif果然帧数不够，真要像油管那样的话得转成mp4格式才行。\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(animation)\nlibrary(gganimate)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(here)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidize <- function(data) {\n  dat.tidy <- dat %>% \n    select(Title, Ref....Doc.) %>% # average amount of references per document\n    rename(Citation = Ref....Doc.) %>% \n    mutate(\n      Citation = as.numeric(gsub(\",\", \"\", .$Citation)),\n      rank = rank(-Citation)) %>% \n    arrange(desc(Citation)) %>% \n    .[1:10,]\n  return(dat.tidy)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nroot_dir <- \"postsCN/2019-12-31-animation\"\nfilenames <- list.files(here(root_dir), pattern = '.csv')\nyears <- as.numeric(unlist(regmatches(filenames, gregexpr(\"[[:digit:]]+\", filenames))))\n\n\ndat.list <- list()\nlength(dat.list) <- length(filenames)\n\n# dat <- read.csv(here(root_dir, filenames[1]),  header = TRUE, sep = \";\", check.names = T, stringsAsFactors = FALSE)\n# colnames(dat)\n\nfor (n in seq_along(filenames)) {\n  dat <- read.csv(here(root_dir, filenames[n]), header = TRUE, sep = \";\", check.names = T, stringsAsFactors = FALSE)\n  dat = tidize(dat)\n  dat$Year = years[n]\n  dat.list[[n]] <- dat\n}\ndat.comb <- do.call(\"rbind\", dat.list)\ndat.comb$Year <- factor(dat.comb$Year, levels = years)\ndat.comb$Title <- factor(dat.comb$Title)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstaticplot <- \n  ggplot(dat.comb, \n         aes(x = rank, group = Year, fill = as.factor(Title), color = as.factor(Title))) +\n  geom_tile(aes(y = Citation/2,\n                height = Citation,\n                width = 0.8), alpha = 0.1) +\n  geom_text(aes(y = 3000, label = paste(\" \",Title)), hjust = 0, color = \"black\") +\n  geom_text(aes(y= Citation + 20,label = Citation, hjust= 0)) + # the number\n  guides(color = FALSE, fill = FALSE) +\n  coord_flip(clip = \"off\", expand = FALSE) +\n  scale_y_continuous(labels = scales::comma, limits = c(0, 25000)) +\n  scale_x_reverse(breaks = 1:20) +\n  labs(y = \"Citation\") +\n  theme(\n    axis.title.x=element_blank(),\n    axis.ticks.x=element_blank(),\n    axis.text.x=element_blank(),\n    axis.title.y=element_blank(),\n    axis.text.y= element_blank(),\n    axis.ticks.y=element_blank()) +\n  theme_classic() \nstaticplot + facet_wrap(~ Year, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(anim =  \n    staticplot + \n    transition_states(Year, transition_length = 20, state_length = 1) +\n    view_follow(fixed_y = TRUE, fixed_x = T) +\n    labs(\n      #title = 'Year: {closest_state}',  \n      caption = \"Author: Jihong Zhang\",\n      render = gifski_renderer()\n    ))\n```\n:::\n\n\n### Original R Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#setwd(\"~/Desktop/impact_factor/\")\nfilenames <- list.files(\"~/Desktop/impact_factor/\")\nyears <- as.numeric(unlist(regmatches(filenames, gregexpr(\"[[:digit:]]+\", filenames))))\n\ndat.list <- list()\nlength(dat.list) <- length(filenames)\n\nfor (n in seq_along(filenames)) {\n  dat <- read.csv(paste0(\"~/Desktop/impact_factor/\", filenames[n]), header = TRUE, sep = \";\", check.names = T, stringsAsFactors = FALSE)\n  dat = tidize(dat)\n  dat$year = years[n]\n  dat.list[[n]] <- dat\n}\ndat.comb <- do.call(\"rbind\", dat.list)\n\ndat.comb[dat.comb$Title == \"MMWR. Recommendations and reports : Morbidity and mortality weekly report. Recommendations and reports / Centers for Disease Control\", \"Title\"] = \"MMWR:Recommendations and reports\"\ndat.comb[dat.comb$Title == \"National vital statistics reports : from the Centers for Disease Control and Prevention, National Center for Health Statistics, National Vital Statistics System\", \"Title\"] = \"National vital statistics reports\"\ndat.comb[dat.comb$Title == \"MMWR. Surveillance summaries : Morbidity and mortality weekly report. Surveillance summaries / CDC\", \"Title\"] = \"MMWR:Surveillance summaries\"\ndat.comb[dat.comb$Title == \"Energy Education Science and Technology Part B: Social and Educational Studies\", \"Title\"] = \"Energy Education Science and Technology\"\n\nstaticplot <- ggplot(dat.comb, aes(x = (rank), group = Title, \n       fill = as.factor(Title), color = as.factor(Title))) +\n  geom_tile(aes(y = Citation/2,\n                height = Citation,\n                width = 1), alpha = 0.8) +\n  geom_text(aes(y = 3000, label = paste(\" \",Title)), hjust = 0, color = \"black\") +\n  geom_text(aes(y= Citation + 20,label = Citation, hjust= 0)) + # the number\n  guides(color = FALSE, fill = FALSE) +\n  coord_flip(clip = \"off\", expand = FALSE) +\n  scale_y_continuous(labels = scales::comma) +\n  scale_x_reverse() +\n  theme(\n    axis.title.x=element_blank(),\n    axis.ticks.x=element_blank(),\n    axis.text.x=element_blank(),\n    axis.title.y=element_blank(),\n    axis.text.y= element_blank(),\n    axis.ticks.y=element_blank()) \n\n(anim = staticplot + \n  transition_states(year, transition_length = 10, state_length = 1) +\n  view_follow(fixed_y = TRUE) +\n  labs(title = 'Citations of The year: {closest_state}',  \n       subtitle  =  \"Top 10 Journals in Social Sciences\",\n       caption = \"Author: Jihong Zhang\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanimate(anim, renderer = gifski_renderer(\"/Users/jzhang285/Documents/Projects/hugo-academic-jihong/static/img/citation_journals.gif\"))\n```\n:::\n\n\nsources: <https://www.scimagojr.com/journalrank.php?category=3304&min=0&min_type=cd>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}