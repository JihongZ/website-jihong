{
  "hash": "09eda3cf64f0fabd0221a112445f6e6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 浪漫主义者的学R之旅-2\nauthor: 吉鸿\ndate: '2018-10-10'\ncategories:\n  - 教程\n---\n\n\n# 0. 查阅文档\n\n可以使用`?fun()`或者`help(fun)`的方式来查阅帮助文档。如果使用Rstudio的话，帮助文档会以html的格式出现在Viewer里。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?mean\n```\n:::\n\n\n# 1. 描述性统计\n\n首先，安装以下R包。`dplyr`是一个优秀的数据分析处理的包，它的作者是Hadley Wickham。你可以浏览[这个网页](https://cran.r-project.org/web/packages/dplyr/vignettes/dplyr.html)来了解更多`dplyr`的使用方法。本文之所以使用这个包而非R basic functions是因为我认为越早接触杰出的高级包可以减少以后重新学习的时间成本。毕竟R基础的方法(functions)实在是限制太多，需要很长时间的积累才能够进行数据处理。而`dplyr`只要掌握了基础的操作就发现数据处理很简单。而且，你可以通过点击RStudio上方菜单上的 **Help \\> Cheatsheats \\> Data Transformation with dplyr** 就可以查看它的使用方法，十分方便。\n\n`usefulR`是我制作的，方便初学者使用的R包。里面储存了一些示例数据。\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## check if install packages\nis_inst <- function(pkg) {\n    nzchar(system.file(package = pkg))\n}\nif (!is_inst(\"usefulR\")) { devtools::install_github(\"jihongz/usefulR\")}\nif (!is_inst(\"dplyr\")) { install.packages(\"dplyr\") }\n\n## load packages\nlibrary(usefulR)\nlibrary(dplyr)\n```\n:::\n\n\n## 1.1 本文数据\n\n我制作了一个伪教育数据`SimpleEduData`。共有100行，3列。教育数据常见的格式为一列数据代表一道题的所有答案(item)，一行数据代表一个学生在这三道题上的得分。得分的分值最小为1,最大为6。\n\n## 1.2 检查数据\n\n### 1.2.1 行数据：部分查看\n\n首先，由于通常你收到的数据的数据量都会很大，没有必要打开Excel一一查看所有数据。在R中，你可以使用`head(data)`或`tail(data)`快速查看数据的头六行和最后六行。`dplyr`提供了一个更方便的函数`sample_n`来随机查看几行数据。举例来看，第一个学生(row1)分别第一、二、三题答了3、1、4分;最后一个学生分别答了6、1、1分。\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhead(SimpleEduData)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    item1 item2 item3\n  1     3     1     4\n  2     5     4     1\n  3     2     5     1\n  4     3     3     2\n  5     1     1     3\n  6     2     4     1\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntail(SimpleEduData)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      item1 item2 item3\n  95      3     1     2\n  96      3     1     2\n  97      5     2     1\n  98      2     1     3\n  99      3     6     1\n  100     6     1     1\n```\n\n\n:::\n\n```{.r .cell-code}\nsample_n(SimpleEduData, 6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    item1 item2 item3\n  1     3     3     2\n  2     3     1     4\n  3     6     1     1\n  4     4     5     1\n  5     3     3     1\n  6     1     5     2\n```\n\n\n:::\n:::\n\n\n### 1.2.2 列数据:图表查看\n\n如果你想要查看一列数据(column)的话，我推荐使用箱形图(boxplot)或者直方图(histogram)的方式来给自己初步的分析。\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow=c(2,2))\n\nplot_histgram <- function(onecolumn) {\n  hist(onecolumn, breaks = (c(1:7)-0.5), col = 'lightblue', border = \"darkblue\")\n}\nplot_histgram(SimpleEduData$item1)\nhist(SimpleEduData$item2, breaks = (c(1:7)-0.5))\nhist(SimpleEduData$item3, breaks = (c(1:7)-0.5))\n```\n\n::: {.cell-output-display}\n![最简单无修饰的直方图](index_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n或者你也可以用`ggplot2`包来创造更复杂的直方图。\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## 增加density plot\nlibrary(ggplot2)\nggplot(data = SimpleEduData) +\n  geom_histogram(aes(item2, y = ..density..), breaks = (c(1:7)-0.5),col = \"skyblue\", fill = \"red3\") +\n  geom_density(aes(item2), position = \"stack\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Warning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\n  ℹ Please use `after_stat(density)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![复杂一点的直方图](index_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplotdata <- SimpleEduData %>% \n  gather(item, value) \n\n## Prepare for Normal Distribution Density\ngrid <- with(plotdata, seq(min(value), max(value), length = 100))\nnormaldens <- ddply(plotdata, \"item\", function(df) {\n  data.frame( \n    predicted = grid,\n    density = dnorm(grid, mean(df$value), sd(df$value))\n  )\n})\n\nplotdata %>% \n  ggplot(aes(x = value)) +\n  geom_histogram(aes(y = ..density.., fill = item), \n                 col = \"white\", binwidth = 1) +\n  ## Add some lables for each bin\n  stat_bin(binwidth=1, geom=\"text\", colour=\"white\", size=3,\n           aes(label = ..count.., y = ..density..), \n           position = position_stack(vjust=0.5)) +\n  ## Add density line\n  stat_density(geom = 'line', position = \"stack\", \n               alpha = 0.5, adjust = 1, linetype = 3) +\n  scale_x_continuous(\"Responses\", limits = c(0,7), \n                     labels = 1:6, breaks = 1:6) +\n  scale_y_continuous(\"Frequency\", limits = c(0,0.3), \n                     labels = 0:6/20, breaks = 0:6/20) +\n  ## Add normal density line\n  geom_line(aes(y = density, x = predicted), data = normaldens, colour = c(\"#082F45\")) +\n  facet_wrap(~item, nrow = 2) +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Warning: Removed 6 rows containing missing values or values outside the scale range\n  (`geom_bar()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![更更复杂一点的直方图](index_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow=c(2,2))\nboxplot(SimpleEduData$item1)\ntitle(\"Item1\")\nboxplot(SimpleEduData$item2)\ntitle(\"Item2\")\nboxplot(SimpleEduData$item3)\ntitle(\"Item3\")\n```\n\n::: {.cell-output-display}\n![箱形图](index_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n### 1.2.3 检查缺失值\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(SimpleEduData)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       item1          item2          item3     \n   Min.   :1.00   Min.   :1.00   Min.   :1.00  \n   1st Qu.:2.00   1st Qu.:2.00   1st Qu.:2.00  \n   Median :3.00   Median :3.00   Median :3.00  \n   Mean   :3.29   Mean   :3.29   Mean   :3.34  \n   3rd Qu.:5.00   3rd Qu.:5.00   3rd Qu.:5.00  \n   Max.   :6.00   Max.   :6.00   Max.   :6.00\n```\n\n\n:::\n\n```{.r .cell-code}\n# Add some missing values\nSimpleEduData_missing <- data.frame(rbind(SimpleEduData, c(NA,NA,NA)))\ntail(SimpleEduData_missing)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      item1 item2 item3\n  96      3     1     2\n  97      5     2     1\n  98      2     1     3\n  99      3     6     1\n  100     6     1     1\n  101    NA    NA    NA\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(SimpleEduData_missing)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       item1          item2          item3     \n   Min.   :1.00   Min.   :1.00   Min.   :1.00  \n   1st Qu.:2.00   1st Qu.:2.00   1st Qu.:2.00  \n   Median :3.00   Median :3.00   Median :3.00  \n   Mean   :3.29   Mean   :3.29   Mean   :3.34  \n   3rd Qu.:5.00   3rd Qu.:5.00   3rd Qu.:5.00  \n   Max.   :6.00   Max.   :6.00   Max.   :6.00  \n   NA's   :1      NA's   :1      NA's   :1\n```\n\n\n:::\n:::\n\n\n## 1.3 数据运算\n\n### 1.3.1 求和\n\n每一行的和可以用`rowSums()`函数来求和，有时候如果有missing values则要加上`na.rm = TRUE`的argument。\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrowSums(SimpleEduData)\nrowSums(SimpleEduData, na.rm = TRUE)\n```\n:::\n\n\n另外，一个常见的做法是新建一个变量来储存总和。具体来说，`total`是每一个学生三道题的总分。\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nSimpleEduData %>% \n  mutate(total = rowSums(.)) %>% \n  head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     item1 item2 item3 total\n  1      3     1     4     8\n  2      5     4     1    10\n  3      2     5     1     8\n  4      3     3     2     8\n  5      1     1     3     5\n  6      2     4     1     7\n  7      3     3     1     7\n  8      6     5     5    16\n  9      5     2     3    10\n  10     5     5     3    13\n```\n\n\n:::\n\n```{.r .cell-code}\nSimpleEduData %>% \n  .[1:8, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    item1 item2 item3\n  1     3     1     4\n  2     5     4     1\n  3     2     5     1\n  4     3     3     2\n  5     1     1     3\n  6     2     4     1\n  7     3     3     1\n  8     6     5     5\n```\n\n\n:::\n\n```{.r .cell-code}\nSimpleEduData %>% \n  mutate(id = rownames(.)) %>% \n  filter(item1 == 6, item2 ==1, item3 ==1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    item1 item2 item3  id\n  1     6     1     1  85\n  2     6     1     1 100\n```\n\n\n:::\n\n```{.r .cell-code}\nSimpleEduData %>% \n  mutate(sex = c(rep(0, 50), rep(1, 50))) %>% \n  mutate(total = rowSums(.)) %>% \n  group_by(sex) %>% \n  summarise(Meantotalscore = mean(total), meanitem1 = mean(item1), meanitem2 = mean(item2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Meantotalscore meanitem1 meanitem2\n  1          10.42      3.29      3.29\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(usefulR)\nsystem.time(usefulR::frequency_table(SimpleEduData))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     user  system elapsed \n    0.003   0.000   0.004\n```\n\n\n:::\n\n```{.r .cell-code}\nsystem.time(summary(SimpleEduData))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     user  system elapsed \n    0.000   0.000   0.001\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}