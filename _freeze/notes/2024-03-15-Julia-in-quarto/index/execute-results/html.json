{
  "hash": "0efdb5d48f79d17e90bc4db747059f31",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: How to use Julia in Quarto\nauthor: Jihong Zhang\ndate: Mar 15 2024\ncategories:\n  - Julia\n  - Quarto\ntoc: true\nnumber-sections: true\nexecute:\n  eval: true\n  output: false\nformat:\n  html:\n    code-summary: Code\n    code-fold: false\n    code-line-numbers: false\n---\n\n## Previous posts\n\nThis [post](posts/2021-08-30-gradient-descent-via-julia/index.md) illustrates how to use Julia to create a gradient descent algorithm. What has not been introduced, however, is how to perform the data analysis using Julia in Quarto. This post will illustrate the workflow step by step.\n\n## Initial Setup\n\nFirst of all, refer to this [Quarto.org](https://quarto.org/docs/computations/julia.html), [JuliaHub](https://help.juliahub.com/juliahub/stable/tutorials/quarto/), and Patrick Altmeyer's [post](https://www.paltmeyer.com/blog/posts/tips-and-tricks-for-using-quarto-with-julia/). The first step is to install following components:\n\n1.  IJulia\n2.  Revise.jl\n3.  Jupyter Cache\n\n``` {.bash filename=\"Terminal\"}\nusing Pkg\nPkg.add(\"IJulia\")\nPkg.add(\"Revise\")\nusing Conda\nConda.add(\"jupyter-cache\")\n```\n\nSecond, when you create the new quarto document, make sure the `yaml` header contains the `jupyter` item. For example, the yaml of this post is:\n\n``` yaml\ntitle: 'How to use Julia in Quarto'\nauthor: 'Jihong Zhang'\ndate: 'Mar 10 2024'\ncategories:\n  - Julia\n  - Quarto\nformat: \n  html: \n    code-summary: 'Code'\n    code-fold: false\n    code-line-numbers: false\njupyter: julia-1.6\n```\n\nAfter the installation, you should be able to run the julia code in quarto like:\n\n::: {#b9c6b792 .cell execution_count=1}\n``` {.julia .cell-code}\nprint(\"Hello World!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello World!\n```\n:::\n:::\n\n\n## Import dataset\n\n::: {#97794fed .cell execution_count=2}\n``` {.julia .cell-code}\n# import packages\nusing DataFrames\nusing CSV\n# load in the diamonds.csv\ndiamonds = DataFrame(CSV.File(\"/Users/jihong/Documents/Projects/website-jihong/notes/2024-03-15-Julia-in-quarto/diamonds.csv\"))\n```\n:::\n\n\n::: {#a8f55423 .cell execution_count=3}\n``` {.julia .cell-code}\nfirst(diamonds, 7)\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div><div style = \"float: left;\"><span>7×10 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">carat</th><th style = \"text-align: left;\">cut</th><th style = \"text-align: left;\">color</th><th style = \"text-align: left;\">clarity</th><th style = \"text-align: left;\">depth</th><th style = \"text-align: left;\">table</th><th style = \"text-align: left;\">price</th><th style = \"text-align: left;\">x</th><th style = \"text-align: left;\">y</th><th style = \"text-align: left;\">z</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"String1\" style = \"text-align: left;\">String1</th><th title = \"String7\" style = \"text-align: left;\">String7</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">0.23</td><td style = \"text-align: left;\">Ideal</td><td style = \"text-align: left;\">E</td><td style = \"text-align: left;\">SI2</td><td style = \"text-align: right;\">61.5</td><td style = \"text-align: right;\">55.0</td><td style = \"text-align: right;\">326</td><td style = \"text-align: right;\">3.95</td><td style = \"text-align: right;\">3.98</td><td style = \"text-align: right;\">2.43</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">0.21</td><td style = \"text-align: left;\">Premium</td><td style = \"text-align: left;\">E</td><td style = \"text-align: left;\">SI1</td><td style = \"text-align: right;\">59.8</td><td style = \"text-align: right;\">61.0</td><td style = \"text-align: right;\">326</td><td style = \"text-align: right;\">3.89</td><td style = \"text-align: right;\">3.84</td><td style = \"text-align: right;\">2.31</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">0.23</td><td style = \"text-align: left;\">Good</td><td style = \"text-align: left;\">E</td><td style = \"text-align: left;\">VS1</td><td style = \"text-align: right;\">56.9</td><td style = \"text-align: right;\">65.0</td><td style = \"text-align: right;\">327</td><td style = \"text-align: right;\">4.05</td><td style = \"text-align: right;\">4.07</td><td style = \"text-align: right;\">2.31</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">0.29</td><td style = \"text-align: left;\">Premium</td><td style = \"text-align: left;\">I</td><td style = \"text-align: left;\">VS2</td><td style = \"text-align: right;\">62.4</td><td style = \"text-align: right;\">58.0</td><td style = \"text-align: right;\">334</td><td style = \"text-align: right;\">4.2</td><td style = \"text-align: right;\">4.23</td><td style = \"text-align: right;\">2.63</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">0.31</td><td style = \"text-align: left;\">Good</td><td style = \"text-align: left;\">J</td><td style = \"text-align: left;\">SI2</td><td style = \"text-align: right;\">63.3</td><td style = \"text-align: right;\">58.0</td><td style = \"text-align: right;\">335</td><td style = \"text-align: right;\">4.34</td><td style = \"text-align: right;\">4.35</td><td style = \"text-align: right;\">2.75</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">0.24</td><td style = \"text-align: left;\">Very Good</td><td style = \"text-align: left;\">J</td><td style = \"text-align: left;\">VVS2</td><td style = \"text-align: right;\">62.8</td><td style = \"text-align: right;\">57.0</td><td style = \"text-align: right;\">336</td><td style = \"text-align: right;\">3.94</td><td style = \"text-align: right;\">3.96</td><td style = \"text-align: right;\">2.48</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">0.24</td><td style = \"text-align: left;\">Very Good</td><td style = \"text-align: left;\">I</td><td style = \"text-align: left;\">VVS1</td><td style = \"text-align: right;\">62.3</td><td style = \"text-align: right;\">57.0</td><td style = \"text-align: right;\">336</td><td style = \"text-align: right;\">3.95</td><td style = \"text-align: right;\">3.98</td><td style = \"text-align: right;\">2.47</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n## Basic Statistical Modeling\n\nFollowing the previous post, we can easily model a generalized linear regression using `GLM` module:\n\n::: {#758820a7 .cell execution_count=4}\n``` {.julia .cell-code}\nusing GLM\nlm_fit = lm(@formula(price ~ depth), diamonds)\n```\n\n::: {.cell-output .cell-output-display execution_count=23}\n```\nStatsModels.TableRegressionModel{LinearModel{GLM.LmResp{Vector{Float64}}, GLM.DensePredChol{Float64, LinearAlgebra.CholeskyPivoted{Float64, Matrix{Float64}, Vector{Int64}}}}, Matrix{Float64}}\n\nprice ~ 1 + depth\n\nCoefficients:\n────────────────────────────────────────────────────────────────────────\n               Coef.  Std. Error      t  Pr(>|t|)  Lower 95%   Upper 95%\n────────────────────────────────────────────────────────────────────────\n(Intercept)  5763.67    740.556    7.78    <1e-14  4312.17    7215.16\ndepth         -29.65     11.9897  -2.47    0.0134   -53.1499    -6.15005\n────────────────────────────────────────────────────────────────────────\n```\n:::\n:::\n\n\nLet's do some more advanced measurement - Factor analysis:\n\n::: {#d99fadec .cell execution_count=5}\n``` {.julia .cell-code}\nusing MultivariateStats\n# only sample first 300 cases and four variables\nXtr = diamonds[1:300 , [:x, :y, :z]]\n# with each observation in a column\nXtr = Matrix(Xtr)' # somehow the data matrix has size of (d, n), which is the trasponse of data matrix in R \n# train a one-factor model\nM = fit(FactorAnalysis, Xtr; maxoutdim=1, method=:em)\n```\n\n::: {.cell-output .cell-output-display execution_count=24}\n```\nFactor Analysis(indim = 3, outdim = 1)\n```\n:::\n:::\n\n\nYou can refer to this [doc](https://multivariatestatsjl.readthedocs.io/en/latest/fa.html) for more details for parameter estimation of factor analysis\n\n::: {#1a1d4a15 .cell execution_count=6}\n``` {.julia .cell-code}\nloadings(M)\n```\n\n::: {.cell-output .cell-output-display execution_count=25}\n```\n3×1 Matrix{Float64}:\n 0.8294175777737991\n 0.8157441937710099\n 0.5052202721703213\n```\n:::\n:::\n\n\nLet's quickly compare the results of `lavaan`\n\n``` r\nlibrary(ggplot2)\nlibrary(lavaan)\ndata('diamonds')\nX = diamonds[1:300, c('x', 'y', 'z')]\nfa_model = \"\nF1 =~ x + y + z\n\"\nfit = cfa(fa_model, data = X, std.lv = TRUE)\ncoef(fit)[1:3] # factor loading\n    F1=~x     F1=~y     F1=~z \n0.7802245 0.7673664 0.4752576 \n```\n\n## Some Popular Julia Package\n\n### Flux\n\nFlux is an elegant approach to machine learning. It's a 100% pure-Julia stack, and provides lightweight abstractions on top of Julia's native GPU and AD support. Flux makes the easy things easy while remaining fully hackable. See more details in [Juliahub](https://juliahub.com/ui/Packages/General/Flux).\n\n::: {#c1d027c7 .cell execution_count=7}\n``` {.julia .cell-code}\nusing Flux, Plots\ndata = [([x], 2x-x^3) for x in -2:0.1f0:2]\n\nmodel = Chain(Dense(1 => 23, tanh), Dense(23 => 1, bias=false), only)\n\noptim = Flux.setup(Adam(), model)\nfor epoch in 1:1000\n  Flux.train!((m,x,y) -> (m(x) - y)^2, model, data, optim)\nend\n\nplot(x -> 2x-x^3, -2, 2, legend=false)\nscatter!(x -> model([x]), -2:0.1f0:2)\n```\n\n::: {.cell-output .cell-output-display execution_count=26}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n<defs>\n  <clipPath id=\"clip270\">\n    <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip270)\" d=\"M0 1920 L2688 1920 L2688 -4.26326e-14 L0 -4.26326e-14  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip271\">\n    <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip270)\" d=\"M152.071 1800.78 L2640.76 1800.78 L2640.76 47.2441 L152.071 47.2441  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip272\">\n    <rect x=\"152\" y=\"47\" width=\"2490\" height=\"1755\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"222.505,1800.78 222.505,47.2441 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"809.459,1800.78 809.459,47.2441 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1396.41,1800.78 1396.41,47.2441 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1983.37,1800.78 1983.37,47.2441 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2570.32,1800.78 2570.32,47.2441 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,1800.78 2640.76,1800.78 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"222.505,1800.78 222.505,1781.88 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"809.459,1800.78 809.459,1781.88 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1396.41,1800.78 1396.41,1781.88 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1983.37,1800.78 1983.37,1781.88 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2570.32,1800.78 2570.32,1781.88 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M192.448 1848.65 L222.123 1848.65 L222.123 1852.59 L192.448 1852.59 L192.448 1848.65 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M236.244 1861.55 L252.563 1861.55 L252.563 1865.48 L230.619 1865.48 L230.619 1861.55 Q233.281 1858.79 237.864 1854.16 Q242.471 1849.51 243.651 1848.17 Q245.896 1845.65 246.776 1843.91 Q247.679 1842.15 247.679 1840.46 Q247.679 1837.71 245.734 1835.97 Q243.813 1834.23 240.711 1834.23 Q238.512 1834.23 236.059 1835 Q233.628 1835.76 230.85 1837.31 L230.85 1832.59 Q233.674 1831.46 236.128 1830.88 Q238.582 1830.3 240.619 1830.3 Q245.989 1830.3 249.183 1832.98 Q252.378 1835.67 252.378 1840.16 Q252.378 1842.29 251.568 1844.21 Q250.781 1846.11 248.674 1848.7 Q248.095 1849.37 244.994 1852.59 Q241.892 1855.78 236.244 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M779.216 1848.65 L808.892 1848.65 L808.892 1852.59 L779.216 1852.59 L779.216 1848.65 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M819.795 1861.55 L827.434 1861.55 L827.434 1835.18 L819.124 1836.85 L819.124 1832.59 L827.388 1830.92 L832.063 1830.92 L832.063 1861.55 L839.702 1861.55 L839.702 1865.48 L819.795 1865.48 L819.795 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1396.41 1834 Q1392.8 1834 1390.97 1837.57 Q1389.17 1841.11 1389.17 1848.24 Q1389.17 1855.34 1390.97 1858.91 Q1392.8 1862.45 1396.41 1862.45 Q1400.05 1862.45 1401.85 1858.91 Q1403.68 1855.34 1403.68 1848.24 Q1403.68 1841.11 1401.85 1837.57 Q1400.05 1834 1396.41 1834 M1396.41 1830.3 Q1402.22 1830.3 1405.28 1834.9 Q1408.36 1839.49 1408.36 1848.24 Q1408.36 1856.96 1405.28 1861.57 Q1402.22 1866.15 1396.41 1866.15 Q1390.6 1866.15 1387.52 1861.57 Q1384.47 1856.96 1384.47 1848.24 Q1384.47 1839.49 1387.52 1834.9 Q1390.6 1830.3 1396.41 1830.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M1973.75 1861.55 L1981.39 1861.55 L1981.39 1835.18 L1973.08 1836.85 L1973.08 1832.59 L1981.34 1830.92 L1986.02 1830.92 L1986.02 1861.55 L1993.66 1861.55 L1993.66 1865.48 L1973.75 1865.48 L1973.75 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M2564.97 1861.55 L2581.29 1861.55 L2581.29 1865.48 L2559.35 1865.48 L2559.35 1861.55 Q2562.01 1858.79 2566.59 1854.16 Q2571.2 1849.51 2572.38 1848.17 Q2574.63 1845.65 2575.51 1843.91 Q2576.41 1842.15 2576.41 1840.46 Q2576.41 1837.71 2574.46 1835.97 Q2572.54 1834.23 2569.44 1834.23 Q2567.24 1834.23 2564.79 1835 Q2562.36 1835.76 2559.58 1837.31 L2559.58 1832.59 Q2562.4 1831.46 2564.86 1830.88 Q2567.31 1830.3 2569.35 1830.3 Q2574.72 1830.3 2577.91 1832.98 Q2581.11 1835.67 2581.11 1840.16 Q2581.11 1842.29 2580.3 1844.21 Q2579.51 1846.11 2577.4 1848.7 Q2576.83 1849.37 2573.72 1852.59 Q2570.62 1855.78 2564.97 1861.55 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"152.071,1751.15 2640.76,1751.15 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"152.071,1337.58 2640.76,1337.58 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"152.071,924.012 2640.76,924.012 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"152.071,510.442 2640.76,510.442 \"/>\n<polyline clip-path=\"url(#clip272)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"152.071,96.8724 2640.76,96.8724 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,1800.78 152.071,47.2441 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,1751.15 170.969,1751.15 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,1337.58 170.969,1337.58 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,924.012 170.969,924.012 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,510.442 170.969,510.442 \"/>\n<polyline clip-path=\"url(#clip270)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"152.071,96.8724 170.969,96.8724 \"/>\n<path clip-path=\"url(#clip270)\" d=\"M49.5521 1751.6 L79.2279 1751.6 L79.2279 1755.54 L49.5521 1755.54 L49.5521 1751.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M102.168 1737.94 L90.3621 1756.39 L102.168 1756.39 L102.168 1737.94 M100.941 1733.87 L106.82 1733.87 L106.82 1756.39 L111.751 1756.39 L111.751 1760.28 L106.82 1760.28 L106.82 1768.43 L102.168 1768.43 L102.168 1760.28 L86.5658 1760.28 L86.5658 1755.77 L100.941 1733.87 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M51.6354 1338.03 L81.3112 1338.03 L81.3112 1341.97 L51.6354 1341.97 L51.6354 1338.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M95.4315 1350.93 L111.751 1350.93 L111.751 1354.86 L89.8065 1354.86 L89.8065 1350.93 Q92.4686 1348.17 97.0519 1343.54 Q101.658 1338.89 102.839 1337.55 Q105.084 1335.02 105.964 1333.29 Q106.867 1331.53 106.867 1329.84 Q106.867 1327.08 104.922 1325.35 Q103.001 1323.61 99.8991 1323.61 Q97.7 1323.61 95.2463 1324.38 Q92.8158 1325.14 90.038 1326.69 L90.038 1321.97 Q92.8621 1320.83 95.3158 1320.26 Q97.7695 1319.68 99.8065 1319.68 Q105.177 1319.68 108.371 1322.36 Q111.566 1325.05 111.566 1329.54 Q111.566 1331.67 110.756 1333.59 Q109.968 1335.49 107.862 1338.08 Q107.283 1338.75 104.181 1341.97 Q101.08 1345.16 95.4315 1350.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M99.8065 909.81 Q96.1954 909.81 94.3667 913.375 Q92.5612 916.917 92.5612 924.046 Q92.5612 931.153 94.3667 934.718 Q96.1954 938.259 99.8065 938.259 Q103.441 938.259 105.246 934.718 Q107.075 931.153 107.075 924.046 Q107.075 916.917 105.246 913.375 Q103.441 909.81 99.8065 909.81 M99.8065 906.107 Q105.617 906.107 108.672 910.713 Q111.751 915.296 111.751 924.046 Q111.751 932.773 108.672 937.38 Q105.617 941.963 99.8065 941.963 Q93.9963 941.963 90.9176 937.38 Q87.8621 932.773 87.8621 924.046 Q87.8621 915.296 90.9176 910.713 Q93.9963 906.107 99.8065 906.107 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M95.4315 523.787 L111.751 523.787 L111.751 527.722 L89.8065 527.722 L89.8065 523.787 Q92.4686 521.032 97.0519 516.403 Q101.658 511.75 102.839 510.407 Q105.084 507.884 105.964 506.148 Q106.867 504.389 106.867 502.699 Q106.867 499.944 104.922 498.208 Q103.001 496.472 99.8991 496.472 Q97.7 496.472 95.2463 497.236 Q92.8158 498 90.038 499.551 L90.038 494.829 Q92.8621 493.694 95.3158 493.116 Q97.7695 492.537 99.8065 492.537 Q105.177 492.537 108.371 495.222 Q111.566 497.907 111.566 502.398 Q111.566 504.528 110.756 506.449 Q109.968 508.347 107.862 510.94 Q107.283 511.611 104.181 514.829 Q101.08 518.023 95.4315 523.787 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip270)\" d=\"M102.168 83.6665 L90.3621 102.115 L102.168 102.115 L102.168 83.6665 M100.941 79.5924 L106.82 79.5924 L106.82 102.115 L111.751 102.115 L111.751 106.004 L106.82 106.004 L106.82 114.152 L102.168 114.152 L102.168 106.004 L86.5658 106.004 L86.5658 101.49 L100.941 79.5924 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip272)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"222.505,96.8724 226.327,110.283 230.148,123.588 233.97,136.789 237.791,149.886 255.458,209.091 273.125,266.112 290.792,320.981 308.459,373.733 326.127,424.401 343.794,473.019 361.461,519.622 379.128,564.243 400.362,615.298 421.597,663.598 442.831,709.201 464.066,752.165 482.019,786.477 499.973,818.98 517.926,849.71 535.88,878.703 555.382,908.27 574.884,935.874 594.387,961.561 613.889,985.377 631.869,1005.71 649.848,1024.53 667.828,1041.87 685.808,1057.77 705.084,1073.24 724.36,1087.15 743.636,1099.51 762.911,1110.39 785.245,1121.2 807.578,1130.13 829.911,1137.26 852.244,1142.65 872.091,1146.05 891.938,1148.18 911.785,1149.09 931.632,1148.83 966.44,1145.68 1001.25,1139.34 1039.2,1129.09 1077.15,1115.69 1115.32,1099.36 1153.5,1080.51 1195.71,1057.16 1237.92,1031.62 1278.08,1005.7 1318.24,978.607 1401.75,920.251 1472.05,871.159 1514.97,842.183 1557.88,814.546 1597.19,790.818 1636.51,768.994 1672.82,750.852 1709.12,734.945 1745.9,721.413 1782.68,710.781 1803.29,706.205 1823.9,702.69 1844.51,700.288 1865.12,699.055 1902.47,699.97 1939.82,705.216 1961.21,710.292 1982.59,716.953 2003.97,725.258 2025.35,735.268 2045.15,746.108 2064.95,758.507 2084.75,772.515 2104.54,788.178 2124.06,805.287 2143.58,824.097 2163.1,844.653 2182.62,867.001 2201.57,890.458 2220.52,915.688 2239.47,942.735 2258.42,971.639 2277.85,1003.24 2297.28,1036.89 2316.7,1072.62 2336.13,1110.48 2357.42,1154.46 2378.7,1201.11 2399.99,1250.49 2421.27,1302.66 2436.73,1342.34 2452.19,1383.54 2467.65,1426.29 2483.11,1470.61 2498.57,1516.53 2514.03,1564.06 2529.49,1613.23 2544.95,1664.06 2551.29,1685.41 2557.63,1707.03 2563.98,1728.95 2570.32,1751.15 \"/>\n<circle clip-path=\"url(#clip272)\" cx=\"222.505\" cy=\"312.37\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"281.201\" cy=\"400.939\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"339.896\" cy=\"491.25\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"398.592\" cy=\"582.95\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"457.287\" cy=\"675.495\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"515.982\" cy=\"768.044\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"574.678\" cy=\"859.295\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"633.373\" cy=\"947.261\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"692.069\" cy=\"1028.98\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"750.764\" cy=\"1100.23\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"809.459\" cy=\"1155.51\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"868.155\" cy=\"1188.72\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"926.85\" cy=\"1195.11\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"985.546\" cy=\"1174.57\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1044.24\" cy=\"1134.09\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1102.94\" cy=\"1086.41\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1161.63\" cy=\"1043.94\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1220.33\" cy=\"1012.68\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1279.02\" cy=\"990.763\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1337.72\" cy=\"971.439\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1396.41\" cy=\"947.114\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1455.11\" cy=\"912.444\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1513.8\" cy=\"865.994\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1572.5\" cy=\"810.646\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1631.19\" cy=\"752.832\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1689.89\" cy=\"700.781\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1748.59\" cy=\"662.306\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1807.28\" cy=\"642.948\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1865.98\" cy=\"645.129\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1924.67\" cy=\"668.38\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"1983.37\" cy=\"710.249\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2042.06\" cy=\"767.338\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2100.76\" cy=\"836.1\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2159.45\" cy=\"913.321\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2218.15\" cy=\"996.319\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2276.84\" cy=\"1082.97\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2335.54\" cy=\"1171.63\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2394.24\" cy=\"1261.11\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2452.93\" cy=\"1350.49\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2511.63\" cy=\"1439.12\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n<circle clip-path=\"url(#clip272)\" cx=\"2570.32\" cy=\"1526.53\" r=\"14.4\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"1\" stroke=\"#000000\" stroke-opacity=\"1\" stroke-width=\"3.84\"/>\n</svg>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}