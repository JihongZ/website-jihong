{
  "hash": "132844991e60dd37986a9014b1886727",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 05: Maximum Lilkelihood Estimation and Generalized Univariate Models\"\nsubtitle: \"Models for Binary Outcomes\"\nauthor: \"Jihong Zhang*, Ph.D\"\ninstitute: | \n  Educational Statistics and Research Methods (ESRM) Program*\n  \n  University of Arkansas\ndate: \"2024-09-16\"\nsidebar: false\nexecute: \n  echo: true\n  warning: false\noutput-location: column\nformat: \n  uark-revealjs:\n    scrollable: true\n    chalkboard: true\n    embed-resources: false\n    code-fold: false\n    number-sections: false\n    footer: \"ESRM 64503: Lecture 05: Models for Binary Outcomes\"\n    slide-number: c/t\n    tbl-colwidths: auto\n    output-file: slides-index.html\n  html: \n    page-layout: full\n    toc: true\n    toc-depth: 2\n    toc-expand: true\n    lightbox: true\n    code-fold: false\nfilters:\n  - shinylive\n---\n\n\n\n\n## Today's Class\n\n-   Review Homework System\n-   [Maximum Likelihood Estimation]{style=\"color: tomato\"}\n    -   The basics\n    -   ML-based Test (Likelihood ratio test, Wald test, Information criteria)\n    -   MLEs for GLMs\n\n## Today's Example Data #1\n\n-   Please use `pak::pak(\"JihongZ/ESRM64503\", upgrade = TRUE)` to upgrade `ESRM64503` package\n\n-   Imagine an employer is looking to hire employees for a job where IQ is important\n\n    -   We will use 5 observations so as to show the math behind the estimation calculations\n\n-   The employer collects two variables:\n\n    -   IQ scores (`perf`)\n    -   Job performance (`iq`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pak::pak(\"JihongZ/ESRM64503\", upgrade = TRUE)\nlibrary(ESRM64503)\nlibrary(kableExtra)\nlibrary(tidyverse)\n\n#data for class example\ndat <- dataIQ |> \n  mutate(ID = 1:5) |> \n  rename(IQ = iq, Performance = perf) |> \n  relocate(ID)\n\nshow_table(dat)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> ID </th>\n   <th style=\"text-align:right;\"> Performance </th>\n   <th style=\"text-align:right;\"> IQ </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 112 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 113 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 115 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:right;\"> 118 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 114 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat |> \n  summarise(\n    across(c(Performance, IQ), list(Mean = mean, SD = sd))\n  ) |> \n  t() |> \n  as.data.frame() |> \n  rownames_to_column(var = \"Variable\") |> \n  separate(Variable, into = c(\"Variable\", \"Stat\"), sep = \"_\") |> \n  pivot_wider(names_from = \"Stat\", values_from = \"V1\") |> \n  show_table()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Variable </th>\n   <th style=\"text-align:right;\"> Mean </th>\n   <th style=\"text-align:right;\"> SD </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Performance </td>\n   <td style=\"text-align:right;\"> 12.8 </td>\n   <td style=\"text-align:right;\"> 2.280351 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IQ </td>\n   <td style=\"text-align:right;\"> 114.4 </td>\n   <td style=\"text-align:right;\"> 2.302173 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat |> \n  select(IQ, Performance) |> \n  cov() |> \n  as.data.frame() |> \n  rownames_to_column(\"Covariance Matrix\") |> \n  show_table()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Covariance Matrix </th>\n   <th style=\"text-align:right;\"> IQ </th>\n   <th style=\"text-align:right;\"> Performance </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> IQ </td>\n   <td style=\"text-align:right;\"> 5.3 </td>\n   <td style=\"text-align:right;\"> 5.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Performance </td>\n   <td style=\"text-align:right;\"> 5.1 </td>\n   <td style=\"text-align:right;\"> 5.2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n## How Estimation Works (More or Less)\n\nMost estimation routines do one of **three things**:\n\n1.  **Minimize Something**: Typically found with names that have “least” in the title. Forms of least squares include “Generalized”, “Ordinary”, “Weighted”, “Diagonally Weighted”, “WLSMV”, and “Iteratively Reweighted.” Typically the estimator of last resort...\n\n<!-- -->\n\n2.  **Maximize Something**: Typically found with names that have “maximum” in the title. Forms include “Maximum likelihood”, “ML”, “Residual Maximum Likelihood” (REML), “Robust ML”. Typically the gold standard of estimators\n\n3.  **Use Simulation to Sample from Something**: more recent advances in simulation use resampling techniques. Names include “Bayesian Markov Chain Monte Carlo”, “Gibbs Sampling”, “Metropolis Hastings”, “Metropolis Algorithm”, and “Monte Carlo”. Used for complex models where ML is not available or for methods where prior values are needed.\n\n::: {.callout-note style=\"font-size: 1.4em;\"}\n-   Loss function in Machine Learning belongs to type I\n\n-   **Question**: Maximum Likelihood Estimation belongs to type [II]{.mohu}\n:::\n\n## An Brief Introduction to Maximum\n\n-   MLE has several good statistical properties that make it the mostly commonly used in statistical estimation:\n\n    1.  **Asymptotic Consistency**: as the sample size increases, the estimator converges in probability to parameters' true values\n\n    2.  **Asymptotic Normality**: as the sample size increases, the distribution of the estimator is normal (note: variance is given by \"information\" matrix)\n\n    3.  **Efficiency**: No other estimator will have a smaller standard error\n\n::: callout-note\n**Estimator**: the algorithm that can get the estimates of parameters\n\n**Asymptotic:** the properties that will occur when the sample size is sufficiently large\n\n**ML-based estimatiors**: other variants of maximum likelihood like robust maximum likelihood, full information maximum likelihood\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}