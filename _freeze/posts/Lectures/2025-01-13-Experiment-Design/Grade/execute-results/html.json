{
  "hash": "d3ed8eb529cc61552e59c8221ea5e576",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ESRM64103: Student Grades\"\nsidebar: false\nexecute: \n  echo: false\nformat: \n  html:\n    code-link: false\n    code-tools: false\n---\n\n::: {.cell standalone='false' viewerHeight='420'}\n\n:::\n\n::: {.cell}\n\n:::\n\n```{ojs}\n// Import necessary modules\nimport { Table, Inputs } from \"@observablehq/inputs\";\n\n// Load the CSV data and ensure Student_ID is a string with leading zeros\ndata = FileAttachment(\"homework_scores.csv\")\n  .csv({ typed: true })\n  .then(rows =>\n    rows.map(row => ({\n      ...row,\n      Student_ID: String(row.Student_ID).padStart(9, '0')\n    }))\n  );\n\n// Create a styled container for input and button (aligned in one row)\nviewof inputContainer = html`<div style=\"\n  display: flex; \n  align-items: center; \n  gap: 10px;\n  margin-bottom: 15px;\n\">`;\n\n// Define the input box for Student ID\nlet studentID = Inputs.text({\n  label: \"🔍 Enter Student ID:\",\n  placeholder: \"e.g., 012345667\",\n  style: {\n    fontSize: \"16px\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    width: \"250px\"\n  }\n});\n\n// Define the stylized confirm button\nlet confirmButton = Inputs.button(\"✔ Confirm\", {\n  style: {\n    fontSize: \"16px\",\n    padding: \"10px 20px\",\n    backgroundColor: \"#4CAF50\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"8px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.3s\"\n  },\n  onmouseover: function () { this.style.backgroundColor = \"#45a049\"; },\n  onmouseout: function () { this.style.backgroundColor = \"#4CAF50\"; }\n});\n\n// Append input and button to the container\ninputContainer.append(studentID, confirmButton);\n\n// Filter the data based on the entered student ID\nfilteredData = {\n  if (confirmButton) {\n    return data.filter(d => d.Student_ID === studentID);\n  }\n  return [];\n};\n\n// Display the filtered data in a table with custom styling\nTable(filteredData, {\n  columns: [\"Student_ID\", \"Name\", \"Bonus\", \"HW1_Grade\", \"Total\"],\n  style: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    fontSize: \"16px\"\n  }\n});\n\n```",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}