{
  "hash": "448e13878251565a5a91665fa35a6fe3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 01: Welcome to ESRM 64103\"\nsubtitle: \"Experimental design in Education\"\nauthor: \"Jihong Zhang*, Ph.D\"\ninstitute: | \n  Educational Statistics and Research Methods (ESRM) Program*\n  \n  University of Arkansas\ndate: \"2025-08-18\"\nsidebar: false\nformat: \n  #html: \n  #  page-layout: full\n  #  toc: true\n  #  toc-depth: 2\n  #  lightbox: true\n  uark-revealjs:\n    chalkboard: true\n    embed-resources: false\n    code-fold: true\n    number-sections: true\n    number-depth: 1\n    footer: \"ESRM 64503: Lecture01\"\n    slide-number: c/t\n    tbl-colwidths: auto\n    output-file: slides-index.html\n    scrollable: true\n#jupyter: python3\n---\n\n\n\n## Presentation Outline\n\n1.  Introduce youselves\n\n2.  Walk through the syllabus\n\n    1.  Goal of this class\n\n    2.  Delivery method of class materials\n\n    3.  Assignments\n\n    4.  Policy\n\n    5.  Weekly schedule\n\n## Self Introduction\n\n::: {.columns .column-screen}\n::: {.column width=\"33%\"}\n![University of Kansas (2015-2019)](figures/school_ku.png){fig-align=\"center\" width=\"73%\"}\n:::\n\n::: {.column width=\"33%\"}\n![University of Iowa (2019-2022)](figures/school_ui.png){fig-align=\"center\" width=\"73%\"}\n:::\n\n::: {.column width=\"33%\"}\n![Chinese University of Hong Kong (2022-2023)](figures/hongkong_living.jpg){fig-align=\"center\" width=\"75%\"}\n:::\n:::\n\n## About this class\n\n-   No examination\n\n-   Light homeworks, 3-5 assignments with multiple-choice questions and light calculations\n\n-   To teach big picture and general directions rather than statistical details\n\n-   A lot of examples\n\n-   All materials use R!\n\n## Your turn\n\n-   Tell me:\n\n    1.  Your name\n    2.  Department name\n    3.  Which year in your program\n    4.  Why you are interested in Experimental design\n\n## Class Time\n\n1.  Unit 1 (17:00 - 17:45): Lectures about concepts\n2.  Unit 2 (18:00 - 18:45): Examples\n3.  Unit 3: 19:00 - 19:45 (**Self** **Practice with R Code on your laptop and Ask Questions**)\n\n## What To Expect This Semester\n\n-   **Philosophy**: Focus on accessibility + learning-by-doing\n\n    -   The AMS class heavily emphasize on hands-on task-oriented practices\n\n    -   **No** anxiety-prone tasks (e.g., hand calculations, memorizing formulas)\n\n    -   **No** anxiety-prone methods of evaluation (e.g., timed tests)\n\n-   **Materials:**\n\n    -   **Lecture** slides present concepts—the **what** and the **why**\n\n    -   **Example** documents: reinforce the concepts and demonstrate the **how** using software—R packages\n\n    -   All available at the course website (hosted outside of Blackboard)\n\n        -   [Let me can show you how to use the website]{.underline}\n\n## Course Requirements\n\n-   Participants will have the opportunity to earn **up to 100 total points** in this course.\n\n-   **Up to 88 points** can be earned from homework assignment **(3\\~6 assignments in total)**\n\n-   **Up to 12 points** may be earned from submitting in-class quiz. In-class quiz will be delivered randomly in class. These will be graded on effort only—incorrect answers will not be penalized.\n\n-   **Bonus points** (10 points)\n\n    -   There may be other opportunities to earn extra credit at the instructor’s discretion.\n\n-   **Late Assignment**:\n\n    -   Assignments submitted any time after the deadline will incur a **1-point penalty**. However, extensions will be granted as needed for extenuating circumstances (e.g., conferences, comprehensive exams, family obligations) if requested at least two weeks in advance of the due date.\n\n## Homework delivery\n\n1.  [Online Microsoft form]{.underline} or [Word document via Email]{.underline}\n2.  <https://www.menti.com/alu3mgbzvd6g>\n\n## Our Other Responsibility\n\n-   My job (besides providing materials and assignments):\n\n    -   **Answer questions** via email, in individual meetings, or in group-based zoom office hours—you can each work on homework during office hours and get immediate assistance (and then keep working)\n\n        -   Email me first\n\n-   Your job (in descending order of timely importance):\n\n    -   **Ask questions**—preferably in class, but any time is better than none\n\n    -   **Frequently review** the class material, focusing on mastering the vocabulary, logic, and procedural skills\n\n    -   Don't wait until the last minute to start homework, and don't be afraid to **ask for help if you get stuck** on one thing for more than 15 minutes\n\n        -   Please email me (jzhang\\@uark.edu) a screenshot of your code+error so I can respond easily\n\n    -   **Practice** using the software to implement the techniques you are learning on **data you care about**\n\n    -   **Do the readings** for a broader perspective and additional example (best after the lecture)\n\n## More About Your Experience in this Class\n\n-   **Attendance**: Strongly recommended but not required\n\n    -   **Please do not attend in-person if you might be sick!**\n\n    -   **Please do not attend** if you received the inclement weather notification\n\n    -   You can also join the class via Zoom\n\n    -   You won't miss out: I will post **YouTube** recordings (audio + screen share) by requested at the course website.\n\n-   **Changes** will be sent via email by 9 am on class days\n\n    -   I will update the homework and in-class quiz links on class days. If not uploaded, then there are two situations: (1) I forget to do that. I will re-upload later and notify you by emails. (2) I decide not to upload it or remove it.\n\n    -   I may change to zoom-only for dangerous weather or if I am sick.\n\n## Statistical Software\n\n-   I will show examples primarily using **R and R packages**. Some important R packages include:\n\n    -   **Tidyverse**: a comprehensive R package including multiple mini packages for multiple data cleaning, data transformation.\n\n    -   **ggplot2**: a popular package for data visualization\n\n-   **Why not SPSS?**\n\n    -   [SPSS could only be used for some—but not all–of our content]{.mohu}\n\n    -   More importantly, it doesn't have as much room to grow; R has many new packages being developed via CRAN and GitHub\n\n-   **Why not SAS?**\n\n    -   SAS is not **open-sourced**, meaning that we cannot check source code if something goes wrong\n\n    -   SAS is also commercial, but R is free\n\n------------------------------------------------------------------------\n\n## What We Will Cover\n\n::: columns\n-   Hypothesis Testing\n-   ANOVA\n    -   One-way\n    -   Two-way\n    -   Repeated-measure\n-   ANCOVA\n-   Linear Mixed Model\n:::\n\n# Brief Introduction to R\n\n## Why R?\n\n-   There are some point to consider\n\n    -   R packages are only as good as their authors (so little quality control)\n\n    -   Syntax and capabilities are idiosyncratic to the packages\n\n-   **The good things** are:\n\n    -   If you really master R, you can do by yourself (write your own algorithm for complex model)\n\n    -   You can check the source code of R packages and know where issues come from\n\n    -   You can communicate with R package authors and provide some suggestions\n\n    -   You can be R package author yourself and be famous\n\n## What is R\n\n::: columns\n::: {.column width=\"50%\"}\n-   **R** is an comprehensive statistical and graphical programming language\n\n-   We can use **R language** via multiple graphical user inferences or IDE, i.e., terminal, VS Code or RStudio.\n\n    -   We will mainly focus on RStudio because of its convenience\n\n    -   Rstudio is a product of posit company and is free to use for personal use\n:::\n\n::: {.column width=\"50%\"}\n::: panel-tabset\n## Terminal\n\n![](figures/terminal.png){fig-align=\"left\" width=\"100%\"}\n\n## Rstudio\n\n![](figures/Rstudio.png){fig-align=\"left\" width=\"100%\"}\n\n## VSCode\n\n![](figures/VsCode.png){fig-align=\"left\" width=\"100%\"}\n:::\n:::\n:::\n\n## More RStudio\n\n![](figures/Rstudio_labelled.png){fig-align=\"left\" width=\"100%\"}\n\n## Installation of R and RStudio\n\n-   You can download and install **R base** via r-project.org (currently R-4.4.1)\n\n    -   for [Linux](https://cloud.r-project.org/bin/linux/)\n\n    -   for [Windows](https://cloud.r-project.org/bin/windows/)\n\n    -   for [MacOS](https://cloud.r-project.org/bin/macosx/)\n\n-   Then, after the installation of R, you can download RStudio via posit.co (currently)\n\n    -   for [Windows](https://download1.rstudio.org/electron/windows/RStudio-2024.04.2-764.exe)\n\n    -   for [MacOS](https://download1.rstudio.org/electron/macos/RStudio-2024.04.2-764.dmg)\n\n-   After installation of R and RStudio, you can open up the RStudio to start your R programming.\n\n    -   however, your R only has the **base** package\n\n    -   To enhance its utility, most users will install **R packages** for certain purposes\n\n## R packages\n\n-   R packages are uploaded to some platforms (i.e., CRAN or Github) by researchers or companies\n\n    -   Those R packages typically have their version numbers. Some functions may be available for some version (like Ver. 1.1) but not be available in other versions.\n\n    -   Do not upgrade your packages if you code is running well\n\n-   R users are free to download and use those R packages\n\n    -   To download certain package, you should know package name\n\n    -   For example, if you want to download the latest version of `tidyverse` package, you can type in following command in **the console panel** of Rstudio\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code  code-fold=\"false\"}\n    install.packages(\"tidyverse\")\n    ```\n    :::\n\n\n\n    -   Or if you want to install the older version of package\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code  code-fold=\"false\"}\n    require(devtools)\n    install_version(\"tidyverse\", version = \"1.3.0\", repos = \"http://cran.us.r-project.org\")\n    ```\n    :::\n\n\n\n## More about R packages\n\n-   **CRAN** (Comprehensive R Archive Network) is a network of servers around the world that store identical, up-to-date, versions of code and documentation for R.\n    -   It contains most stable version of packages.\n    -   Most of time, we download package from CRAN\n-   **Github** is for the fast development for R packages\n    -   It contains the up-to-date version of R which may potentially be unstable\n\n    -   You can download the package from Github using `pak` package\n\n\n\n        ::: {.cell}\n        \n        ```{.r .cell-code  code-fold=\"false\"}\n        pak::pak(\"tidyverse/ggplot2\")\n        ```\n        :::\n\n\n\n    -   You can update the package and its dependencies\n\n\n\n        ::: {.cell}\n        \n        ```{.r .cell-code  code-fold=\"false\"}\n        pak::pkg_install(\"ggplot2\", upgrade = TRUE)\n        ```\n        :::\n\n\n\n## R functions\n\n-   To operate certain tasks, you need to use functions contained in R packages\n\n    -   There are two ways of using R functions\n\n    -   **Direct way**: you don't have to load your package first\n\n    -   ![](figures/function.png){width=\"100%\"}\n\n    -   **Use-after-load way**: Package is loaded in your session before you can call the function name without specifying the package name\n\n\n\n        ::: {.cell}\n        \n        ```{.r .cell-code  code-fold=\"false\"}\n        require(pak)\n        pkg_install(\"ggplot2\", upgrade = TRUE)\n        ```\n        :::\n\n\n\n## R functions (Cont.)\n\n-   How do you know you already load the package or not\n\n-   You can use `sessionInfo` function\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code  code-fold=\"false\"}\n    sessionInfo()\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    R version 4.4.1 (2024-06-14)\n    Platform: aarch64-apple-darwin20\n    Running under: macOS 15.2\n    \n    Matrix products: default\n    BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \n    LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n    \n    locale:\n    [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n    \n    time zone: America/Chicago\n    tzcode source: internal\n    \n    attached base packages:\n    [1] stats     graphics  grDevices utils     datasets  methods   base     \n    \n    other attached packages:\n    [1] cmdstanr_0.8.1.9000 rstan_2.32.6        StanHeaders_2.32.10\n    \n    loaded via a namespace (and not attached):\n     [1] tensorA_0.36.2.1     utf8_1.2.4           generics_0.1.3      \n     [4] digest_0.6.37        magrittr_2.0.3       evaluate_1.0.1      \n     [7] grid_4.4.1           fastmap_1.2.0        jsonlite_1.8.9      \n    [10] processx_3.8.4       pkgbuild_1.4.5       backports_1.5.0     \n    [13] ps_1.8.1             gridExtra_2.3        fansi_1.0.6         \n    [16] QuickJSR_1.4.0       scales_1.3.0         codetools_0.2-20    \n    [19] abind_1.4-8          cli_3.6.3            rlang_1.1.4         \n    [22] munsell_0.5.1        yaml_2.3.10          tools_4.4.1         \n    [25] inline_0.3.20        parallel_4.4.1       checkmate_2.3.2     \n    [28] dplyr_1.1.4          colorspace_2.1-1     ggplot2_3.5.1       \n    [31] curl_6.0.0           vctrs_0.6.5          posterior_1.6.0     \n    [34] R6_2.5.1             matrixStats_1.4.1    stats4_4.4.1        \n    [37] lifecycle_1.0.4      V8_6.0.0             pkgconfig_2.0.3     \n    [40] RcppParallel_5.1.9   pillar_1.9.0         gtable_0.3.6        \n    [43] loo_2.8.0            glue_1.8.0           Rcpp_1.0.13-1       \n    [46] xfun_0.49            tibble_3.2.1         tidyselect_1.2.1    \n    [49] rstudioapi_0.17.1    knitr_1.49           htmltools_0.5.8.1   \n    [52] rmarkdown_2.29       compiler_4.4.1       distributional_0.5.0\n    ```\n    \n    \n    :::\n    :::\n\n\n\n-   It outputs multiple info:\n\n    -   R version, Operations System, Matrix operation package, Locale\n\n    -   **Attached packages** (you can call the functions of those package)\n\n    -   **Loaded package via a namespace (and not attached)**, which you cannot call functions and need to `library` or `require` them\n\n## Run R code\n\n-   After you finish R script, you have multiple ways of running the code:\n\n    -   **Method 1**: you can click `Run` button in the top right-head of **Rstudio**\n\n    -   **Method 2**: you can select certain code and press `Ctrl + Enter` (Win) or `Command + Return` (Mac)\n\n    -   **Method 3**: you can `Rscript [FILENAME].r` to run the whole script\n\n    -   **Method 4**: you can using R notebook to interactively run R code\n\n+----------------------------+-------------------+-----------------------------+\n|                            | Script file is .R | Script file is .rmd or .qmd |\n+============================+===================+=============================+\n| **Run the whole script**   | -   Method 1      | -   Method 4                |\n|                            | -   Method 3      |                             |\n+----------------------------+-------------------+-----------------------------+\n| **Run the partial script** | -   Method 2      | -   Method 4                |\n+----------------------------+-------------------+-----------------------------+\n\n: {.striped}\n\n## Example 1: More Usage about R\n\n-   Open up [MakeFriendsWithR.qmd](MakeFriendsWithR.qmd)\n\n## Summary\n\n1.  Note that the syllabus, schedule, and all materials are uploaded online the week before class.\n2.  We learn that R, Rstudio, and Quarto (*.qmd*) can be used to execute R code/syntax.\n3.  In-class quiz will be administered randomly. Should be quick and easy. Don't be stressful ever!\n4.  Office hour will be 2PM - 4PM on Monday. Feel free to stop by my office and ask questions.\n5.  Next week, we will start to learn some basics about Experimental Design\n\n## \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}