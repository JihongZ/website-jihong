{
  "hash": "a026e1705bffbedfabbf0849238dc599",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 07: Quarto Document\"\nsubtitle: \"`lubridate` package\"\nauthor: \"Jihong Zhang*, Ph.D\"\ninstitute: | \n  Educational Statistics and Research Methods (ESRM) Program*\n  \n  University of Arkansas\ndate: \"2025-02-05\"\ndate-modified: \"2025-02-21 10:25:37.386949\"\nsidebar: false\nexecute: \n  eval: true\n  echo: true\n  warning: false\noutput-location: default\ncode-annotations: below\nhighlight-style: \"nord\"\nformat: \n  html:\n    code-tools: true\n    code-line-numbers: false\n    code-fold: false\n    number-offset: 0\n  uark-revealjs:\n    scrollable: true\n    chalkboard: true\n    embed-resources: false\n    code-fold: false\n    number-sections: false\n    footer: \"ESRM 64503 - Lecture 07: Quarto\"\n    slide-number: c/t\n    tbl-colwidths: auto\n    output-file: slides-index.html\n---\n\n\n\n\n[Class Outline]{.redcolor .bigger}\n\n1.  Talk about the date-time variables\n2.  Locales related to timezone\n\n## What is Quarto\n\n-   An open-source scientific and technical publishing system\n\n    -   Author using Jupyter notebooks or with plain text markdown in your favorite editor.\n    -   Create dynamic content with Python, R, Julia, and Observable.\n    -   Publish reproducible, production quality articles, presentations, dashboards, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.\n    -   Share knowledge and insights organization-wide by publishing to Posit Connect, Confluence, or other publishing systems.\n    -   Write using Pandoc markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.\n\n## Hello Quarto\n\n-   **Quarto** is a multi-language, next generation version of R Markdown from Posit, with many new features and capabilities. Like R Markdown, Quarto uses knitr to execute R code, and is therefore able to render most existing Rmd files without modification.\n-   The following is a Quarto document with the extension `.qmd` (on the left), along with its rendered version as HTML (`.html` on the right).\n\n![](images/clipboard-2141717442.png)\n\n## Installation\n\nYou can install [Quarto](https://quarto.org/docs/get-started/) here\n\n## Tutorial \n\nYou can follow along with the tutorial via the official video - [Get Started with Quarto](https://youtu.be/_f3latmOhew)\n\nIf you would like to follow along with this tutorial in your own environment, follow the steps outlined below.\n\n1.  Download and install the latest release of [RStudio](Download and install the latest release of RStudio:)\n\n2.  Be sure that you have installed the `tidyverse` and `palmerpenguins` packages:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    install.packages(\"tidyverse\")\n    install.packages(\"palmerpenguins\")\n    ```\n    :::\n\n\n\n\n3.  Download the Quarto [document](https://quarto.org/docs/get-started/hello/rstudio/_hello.qmd) (`.qmd`) below, open it in RStudio, and click on ![](https://quarto.org/docs/get-started/hello/images/rstudio-render-button.png){width=\"18\" height=\"15\"} Render.\n\n## Preview File\n\n-   Once you open up the `.qmd` file, you can use the ![](https://quarto.org/docs/get-started/hello/images/rstudio-render-button.png){width=\"18\" height=\"15\"} **Render** button in the RStudio IDE to **render** the file and **preview** the output with a single click or keyboard shortcut (⇧⌘K).\n\n    ![](images/clipboard-1323469978.png)\n\n-   If you prefer to automatically render whenever you save, you can check the [Render on Save]{.underline} option on the editor toolbar. The preview will update whenever you re-render the document. Side-by-side preview works for both HTML and PDF outputs.\n\n    ![](images/clipboard-3771274696.png)\n\n## Creating Content\n\n-   There two modes of the RStudio editor: visual (on the left) and source (on the right).\n\n    ![](images/clipboard-2750519872.png)\n\n-   **Source** and **Visual**\n\n    -   Source mode follows the *markdown* format.\n\n    -   Visual mode is more similar to *Word*\n\n    ![](images/clipboard-600796057.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}