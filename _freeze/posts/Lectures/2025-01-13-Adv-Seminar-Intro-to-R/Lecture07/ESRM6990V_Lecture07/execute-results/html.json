{
  "hash": "3e7b7515926637fb215536f871ef7ab5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 07: Quarto Document\"\nsubtitle: \"\"\nauthor: \"Jihong Zhang*, Ph.D\"\ninstitute: | \n  Educational Statistics and Research Methods (ESRM) Program*\n  \n  University of Arkansas\ndate: \"2025-02-05\"\ndate-modified: \"2025-02-26 19:21:47.328546\"\nsidebar: false\nexecute: \n  eval: false\n  echo: true\n  warning: false\noutput-location: default\ncode-annotations: below\nformat: \n  html:\n    code-tools: true\n    code-line-numbers: false\n    code-fold: false\n    number-offset: 0\n    anchor-sections: true\n    number-sections: false\n  uark-revealjs:\n    scrollable: true\n    chalkboard: true\n    embed-resources: false\n    code-fold: false\n    number-sections: false\n    footer: \"ESRM 64503 - Lecture 07: Quarto\"\n    slide-number: c/t\n    tbl-colwidths: auto\n    output-file: slides-index.html\n---\n\n\n\n\n::: objectives\n## Overview\n\n1.  What is Quarto?\n2.  Installation of Quarto\n3.  YouTube Tutorial\n4.  One Example of Quarto C.V.\n:::\n\n## What is Quarto\n\n-   An open-source scientific and technical publishing system\n\n    -   Author using Jupyter notebooks or with plain text markdown in your favorite editor.\n    -   Create dynamic content with Python, R, Julia, and Observable.\n    -   Publish reproducible, production quality **articles, presentations, dashboards, websites, blogs, and books** in HTML, PDF, MS Word, ePub, and more.\n    -   Share knowledge and insights organization-wide by publishing to Posit Connect, Confluence, or other publishing systems.\n    -   Write using Pandoc markdown, including equations, citations, crossrefs, figure panels, callouts, advanced layout, and more.\n\n## Hello Quarto\n\n-   **Quarto** is a multi-language of R Markdown from Posit, with many new features and capabilities. Like R Markdown, Quarto uses knitr to execute R code, and is therefore able to render most existing Rmd files without modification.\n-   The following is a Quarto document with the extension `.qmd` (on the left), along with its rendered version as HTML (`.html` on the right).\n\n![](images/clipboard-2141717442.png)\n\n## Installation\n\nYou can install [Quarto](https://quarto.org/docs/get-started/) here. It is a standalone software, independent from R and RStudio. It can be used inside RStudio.\n\n## Tutorial\n\nYou can follow along with the tutorial via the official video - [Get Started with Quarto](https://youtu.be/_f3latmOhew)\n\nIf you would like to follow along with this tutorial in your own environment, follow the steps outlined below.\n\n1.  Download and install the latest release of [RStudio](Download%20and%20install%20the%20latest%20release%20of%20RStudio:)\n\n2.  Be sure that you have installed the `tidyverse` and `palmerpenguins` packages:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    install.packages(\"tidyverse\")\n    install.packages(\"palmerpenguins\")\n    ```\n    :::\n\n\n\n\n3.  Download the Quarto [document](https://quarto.org/docs/get-started/hello/rstudio/_hello.qmd) (`.qmd`) below, open it in RStudio, and click on ![](https://quarto.org/docs/get-started/hello/images/rstudio-render-button.png){width=\"18\" height=\"15\"} Render.\n\n## Preview File\n\n-   Once you open up the `.qmd` file, you can use the ![](https://quarto.org/docs/get-started/hello/images/rstudio-render-button.png){width=\"18\" height=\"15\"} **Render** button in the RStudio IDE to **render** the file and **preview** the output with a single click or keyboard shortcut (⇧⌘K).\n\n    ![](images/clipboard-1323469978.png)\n\n-   If you prefer to automatically render whenever you save, you can check the [Render on Save]{.underline} option on the editor toolbar. The preview will update whenever you re-render the document. Side-by-side preview works for both HTML and PDF outputs.\n\n    ![](images/clipboard-3771274696.png)\n\n## Creating Content\n\n-   There two modes of the RStudio editor: visual (on the left) and source (on the right).\n\n    ![](images/clipboard-2750519872.png)\n\n-   **Source** and **Visual**\n\n    -   Source mode follows the *markdown* format.\n\n    -   Visual mode is more similar to *Word*\n\n    ![](images/clipboard-600796057.png)\n\n## YAML Header\n\n-   Each Quarto document (`.qmd`) typically starts with YAML Header\n\n-   YAML head contains some setup information (metadata) including `title`, `subtitle`, `author`, `date`, output file format (html, pdf, or slides)\n\n-   An (optional) YAML header demarcated by three dashes (`---`) on either end.\n\n``` yaml\n---\ntitle: \"Hello, Quarto\"\nformat: html\neditor: visual\n---\n```\n\n-   The basic syntax of YAML uses key-value pairs in the format `key: value`\n\n------------------------------------------------------------------------\n\n### Example: YAML Header of today's lecture\n\n``` yaml\n---\ntitle: \"Lecture 07: Quarto Document\"\nsubtitle: \"quarto\"\nauthor: \"Jihong Zhang*, Ph.D\"\ninstitute: | \n  Educational Statistics and Research Methods (ESRM) Program*\n  \n  University of Arkansas\ndate: \"2025-02-05\"\ndate-modified: \"2025-02-26 19:21:47.336589\"\nsidebar: false\nexecute: \n  eval: true\n  echo: true\n  warning: false\noutput-location: default\ncode-annotations: below\nhighlight-style: \"dracula\"\nformat: \n  html:\n    code-tools: true\n    code-line-numbers: false\n    code-fold: false\n    number-offset: 0\n  uark-revealjs:\n    scrollable: true\n    chalkboard: true\n    embed-resources: false\n    code-fold: false\n    number-sections: false\n    footer: \"ESRM 64503 - Lecture 07: Quarto\"\n    slide-number: c/t\n    tbl-colwidths: auto\n    output-file: slides-index.html\n---\n```\n\n## Code Chunks\n\n-   Code chunks contains code that can be output directly into the output file.\n\n-   R code chunks identified with `{r}` with (optional) chunk options, in YAML style, identified by `#|` at the beginning of the line.\n\n-   You can also run each code chunk interactively in the RStudio editor by clicking the ![](https://d33wubrfki0l68.cloudfront.net/18153fb9953057ee5cff086122bd26f9cee8fe93/3aba9/images/notebook-run-chunk.png) icon or keyboard shortcut (⇧⌘↩).\n\n    -   RStudio executes the code and displays the results either inline within your file or in the Console, depending on your preference.\n\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: load-packages\n#| eval: true\n#| warning: false\n#| message: false\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n````\n:::\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: show-table\n#| eval: true\n\nhead(penguins)\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n-   Documentation of Code Chunk settings is confusing. You can find some illustration in multiple places in quarto.org:\n\n    -   [Chunk Options](https://quarto.org/docs/computations/r.html#chunk-options)\n\n    -   [Code Cells: Knitr](https://quarto.org/docs/reference/cells/cells-knitr.html)\n\n    -   [Execution Options](https://quarto.org/docs/computations/execution-options.html)\n\n        -   [Fenced-Echo](https://quarto.org/docs/computations/execution-options.html#fenced-echo)\n\n    -   [Yihui: Chunk options and package options](https://yihui.org/knitr/options/)\n\n## Markdown Text\n\n-   Except YAML Header and Code Chunks, other text contents are displayed with the format of Markdown language\n\n    -   You can check markdown basics [here](https://quarto.org/docs/authoring/markdown-basics.html)\n\n-   There are two ways of editing quarto file: (1) markdown in Source mode (2) clicking in Visual mode\n\n-   Quarto uses markdown syntax for text. If using the visual editor, you won’t need to learn much markdown syntax for authoring your document, as you can use the menus and shortcuts to add a header, bold text, insert a table, etc.\n\n    -   If using the source editor, you can achieve these with markdown expressions like `##`, `**bold**`, etc.\n\n![](images/clipboard-249611071.png)\n\n## Example: Quarto PDF\n\n-   Create a new file called `quarto_pdf.qmd`\n\n-   Use the `pdf` format to create PDF output. For example:\n\n``` {.yaml filename=\"quarto_pdf.qmd\"}\n---\ntitle: \"My document\"\nformat:\n  pdf:\n    toc: true\n    number-sections: true\n    colorlinks: true\n---\n```\n\n-   In order to create PDFs you will need to install a recent distribution of TeX. We recommend the use of TinyTeX (which is based on TexLive), which you can install with the following command:\n\n``` bash\nquarto install tinytex\n```\n\n-   Change to Source Mode, copy and paste the following code into your quarto document\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\", se = FALSE)\n```\n:::\n\n\n\n\n-   Render the quarto file using ![](images/clipboard-2571102192.png){width=\"70\" height=\"30\"} botton\n\n## Quarto PDF Template - Extension\n\n-   What: Quarto Extensions are a powerful way to modify or extend the behavior of Quarto, and can be created and distributed by anyone. There are several types of extensions available:\n\n    |  |  |\n    |------------------------------------|------------------------------------|\n    | **Extension Type** | **Description** |\n    | [Shortcodes](https://quarto.org/docs/extensions/shortcodes.html) | Special markdown directives that generate various types of content. For example, you could create shortcodes to embed tweets or videos in a document. |\n    | [Filters](https://quarto.org/docs/extensions/filters.html) | A flexible and powerful tool for introducing new global behaviors and/or new markdown rendering behaviors. For example, you could create filters to implement output folding, an image carousel, or just about anything you can imagine! |\n    | [Journal Articles](https://quarto.org/docs/journals/formats.html) | Enable authoring of professional Journal articles using markdown, and produce both LaTeX (PDF) and HTML versions of the articles. |\n    | [Custom Formats](https://quarto.org/docs/extensions/formats.html) | Create new output formats by bundling together document options, templates, style sheets, and other content. |\n    | [Revealjs Plugins](https://quarto.org/docs/extensions/revealjs.html) | Extend the capabilities of HTML presentations created with Revealjs. |\n    | [Project Types](https://quarto.org/docs/extensions/project-types.html) | Create new project project types that bundle together standard content and options, or make it easy to create a website for a custom HTML format. |\n    | [Starter Templates](https://quarto.org/docs/extensions/starter-templates.html) | Help users get started with new projects by providing a template and example content. Starter templates aren’t strictly extensions (i.e. they aren’t installed in the `_extensions` directory) but they are often used with custom formats and project types. |\n    | [Metadata](https://quarto.org/docs/extensions/metadata.html) | Provide YAML configuration that can be merged into existing Quarto projects. |\n\n------------------------------------------------------------------------\n\n### Where to download extension\n\n-   The [Quarto Extensions GitHub](https://github.com/quarto-ext/) organization provides a set of extensions developed by the core Quarto team. Many of these extensions implement frequently requested features, and all of them provide sound examples of how to implement extensions.\n\n-   The [Quarto Journals](https://github.com/quarto-journals/) GitHub organization contains a set of Journal Article formats developed by the core Quarto team or contributed by third parties.\n\n    -   No APA-7 format unfortunately. But there is a community-version [APA-7 Quarto Template](https://github.com/wjschne/apaquarto), which can be used for creating APA7 documents in .docx, .html, and .pdf formats\n\n-   Finally, most published extensions are hosted on GitHub and therefore have source code available that you can learn from.\n\n------------------------------------------------------------------------\n\n### Example: Create C.V. Using Quarto\n\n1.  We use the the quarto extension [(Github Page)](https://github.com/kazuyanagimoto/quarto-awesomecv-typst#readme) for awesomecv for illustration\n    -   Prerequisite: successfully installed quarto\n    -   type in the following `my-cv` in the Directory name question\n\n``` {.bash filename=\"terminal\"}\nquarto use template kazuyanagimoto/quarto-awesomecv-typst\n```\n\n``` bash\nQuarto templates may execute code when documents are rendered. If you do not\ntrust the authors of the template, we recommend that you do not install or\nuse the template.\n? Do you trust the authors of this template (Y/n) › Yes\n? Create a subdirectory for template? (Y/n) › Yes\n? Directory name: › my-cv\n[✓] Downloading\n[✓] Unzipping\n\nThe template requires the following changes to extensions:\nQuarto-awesomecv-typst   [Install]   0.1.0 (format)\n? Would you like to continue (Y/n) › Yes\n```\n\n2.  Open `my-cv.qmd` in **Source Mode** with Rstudio. Type in the following command in `Console` panel\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"typstcv\", repos = \"https://kazuyanagimoto.r-universe.dev\")\n```\n:::\n\n\n\n\n3.  Replace the YAML header with the following\n\n``` yaml\n---\ntitle: \"Jihong Zhang's CV\"\nauthor:\n  firstname: Jihong\n  lastname: Zhang\n  address: \"Rämistrasse 101, CH-8092 Zürich, Switzerland, Zürich\"\n  position: \"Research Physicist ・ Professor\"\n  contacts:\n    - icon: fa envelope\n      text: ae@example.com\n      url: \"mailto:ae@example.com\"\n    - icon: assets/icon/bi-house-fill.svg\n      text: example.com\n      url: https://example.com\n    - icon: fa brands orcid\n      text: 0000-0000-0000-0000\n      url: https://orcid.org/0000-0000-0000-0000\n    - icon: fa brands github\n      text: GitHub\n      url: https://github.com/example\n    - icon: fa brands linkedin\n      text: LinkedIn\n      url: https://linkedin.com/in/example\n    - icon: fa brands x-twitter\n      text: twitter\n      url: https://twitter.com/example\nexecute: \n  echo: false\n  eval: true\n  warning: false\n  output: asis\nformat: awesomecv-typst\n---\n```\n\n4.  Copy-and-paste the following code chunks under the `## Education` section\n\n```{{r}}\nlibrary(typstcv)\n\neduc <- data.frame(\n title = c(\"Ph.D. in Education\", \n           \"Master of Science\"),\n location = c(\"Iowa, U.S.\", \n              \"Kansas, U.S.\"),\n date = c(\"2019\", \"2015\"),\n description = c(\"University of Arkansas\", \"Fayetteville\")\n)\n\nresume_entry(educ)\n```\n\n5.  Render the file\n\n------------------------------------------------------------------------\n\n::: discussion\n## General Suggestions\n\n1.  Use Quarto document to report you data analysis results.\n2.  Use Quarto document to write notes\n:::\n\n## Other Resources about Quarto\n\n-   [Official Quarto Guide](https://quarto.org/docs/guide/)\n\n-   [YouTube Video - Get Started With Quarto](https://www.youtube.com/watch?v=_f3latmOhew)\n\n-   [Tavareshugo: Joining Tables](https://tavareshugo.github.io/r-intro-tidyverse-gapminder/08-joins/index.html)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}