{
  "hash": "1d119c3611e240a8d0392f426082f844",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercise 06: Date and Time\"\nsubtitle: \"\"\nauthor: \"Jihong Zhang*, Ph.D\"\ninstitute: | \n  Educational Statistics and Research Methods (ESRM) Program*\n  \n  University of Arkansas\ndate: \"2025-08-18\"\nsidebar: false\nexecute: \n  warning: false\n  message: false\n  eval: false\n  echo: true\nformat: \n  html: \n    page-layout: full\n    number-sections: false\ntoc: true\ntoc-depth: 2\nlightbox: true\ncode-fold: show\n---\n\n\n\n\n### **Question 1: Basic Date-Time Functions**\n1. Load the `lubridate` package and print the current date and time using R functions.\n2. Convert the following character strings into `Date` objects:\n   - `\"2024-07-01\"`\n   - `\"15/08/2023\"` (Use the correct format for parsing.)\n3. Convert the following character strings into `POSIXct` date-time objects:\n   - `\"2023-12-25 18:30:00\"`\n   - `\"07-13-2024 14:45\"` (Use the correct format for parsing.)\n\n   \n\n\n::: {.cell}\n\n:::\n\n\n\n\n### **Question 2: Importing and Parsing Dates**\n1. Create a CSV file (or use an inline string) with the following data:\n   ```\n   date, datetime\n   01-15-2024, 2024/01/15 14:20:00\n   02-28-2023, 2023-02-28 23:59:59\n   ```\n   - Read this CSV into R using `read_csv()`.\n   - Ensure that the `date` column is parsed as a `Date` and the `datetime` column is parsed as a `POSIXct` object.\n\n\n   \n2. Modify the import function to parse the `date` column correctly, assuming it follows the `\"MM-DD-YYYY\"` format.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### **Question 3: Extracting Components from Dates**\n1. Given the date vector:\n\n\n   ::: {.cell}\n   \n   ```{.r .cell-code}\n   dates <- as.Date(c(\"2023-07-15\", \"2024-01-01\", \"2025-12-31\"))\n   ```\n   :::\n\n\n   - Extract the **year**, **month**, and **day** components.\n   - Extract the **day of the week** in both numeric and abbreviated name formats.\n   - Extract the **day of the year**.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### **Question 4: Rounding and Formatting Dates**\n1. Given the date-time `\"2024-07-12 15:47:23\"`, apply:\n   - `floor_date()` to round it down to the nearest hour.\n   - `ceiling_date()` to round it up to the nearest day.\n   - `round_date()` to round it to the nearest 10-minute interval.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n2. Convert `\"2025-02-15\"` into the following formats using `format()`:\n   - `\"YYYY/MM/DD\"`\n   - `\"Month Day, Year\"` (e.g., `\"February 15, 2025\"`)\n   - `\"Day-Month-Year\"` (e.g., `\"15-February-2025\"`)\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n### **Question 5: Working with Time Zones**\n1. Retrieve the systemâ€™s current time zone and display all available time zones containing `\"America\"`.\n2. Convert `\"2024-08-01 12:00:00\"` from `\"UTC\"` to:\n   - `\"America/New_York\"`\n   - `\"Europe/London\"`\n   - `\"Asia/Tokyo\"`\n3. Calculate the time difference (in hours) between `\"US/Central\"` and `\"Asia/Hong_Kong\"` on **January 1, 2025**.\n    - Hint: use `difftime(units = \"hours\")` to return time difference between two time\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}