{
  "hash": "123eef92e456f62fd9e36729a704993a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lecture 09: Visualizing Numerical Data\"\nsubtitle: \"`ggplot2` package\"\ndate: \"2025-02-05\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  message: false\noutput-location: default\ncode-annotations: below\nformat: \n  html:\n    code-tools: true\n    code-line-numbers: false\n    code-fold: false\n    number-offset: 0\n    fig-align: center\n  uark-revealjs:\n    scrollable: true\n    chalkboard: true\n    embed-resources: false\n    code-fold: false\n    number-sections: false\n    footer: \"ESRM 64503\"\n    slide-number: c/t\n    tbl-colwidths: auto\n    output-file: slides-index.html\n    out.width: \"100%\"\nfilters: \n  - webr\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n# Interactive editor\n\nInteractive code sections look like this. Make changes in the text box and click on the green “Run Code” button to see the results. Sometimes there will be a tab with a hint or solution.\n\n-   Run selected code:\n    -   macOS: ⌘ + ↩︎/Return\n    -   Windows/Linux: Ctrl + ↩︎/Enter\n-   To run the entire code cell, you can simply click the “Run code” button, or use the keyboard shortcut:\n    -   Shift + ↩︎\n\nIf you’re curious how this works, each interactive code section uses [the amazing {quarto-webr} package](https://quarto-webr.thecoatlessprofessor.com/) to run R directly in your browser.\n\n::: callout-caution\n## Set Up\n\n```{webr-r}\nlibrary(openintro)\nlibrary(tidyverse)\nloans <- loans_full_schema %>%\n  select(loan_amount, interest_rate, term, grade, \n         state, annual_income, homeownership, debt_to_income)\n```\n:::\n\n# Overview\n\n## Terminology\n\n::: panel-tabset\n## Number of variables involved\n\n-   Univariate data analysis - distribution of single variable\n-   Bivariate data analysis - relationship between two variables\n-   Multivariate data analysis - relationship between many variables at once, usually focusing on the relationship between two while conditioning for others\n\n## Types of variables\n\n-   **Numerical variables** can be classified as **continuous** or **discrete** based on whether or not the variable can take on an infinite number of values or only non-negative whole numbers, respectively.\n-   If the variable is **categorical**, we can determine if it is **ordinal** based on whether or not the levels have a natural ordering.\n:::\n\n## Data: Lending Club\n\n::::: columns\n::: column\n-   Thousands of loans made through the Lending Club, which is a platform that allows individuals to lend to other individuals\n\n-   Not all loans are created equal -- ease of getting a loan depends on (apparent) ability to pay back the loan\n\n-   Data includes loans *made*, these are not loan applications\n:::\n\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/lending-club.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Take a peek at data\n\n\n\n\n::: {.cell output.lines='18'}\n\n```{.r .cell-code}\nlibrary(openintro)\nlibrary(tidyverse)\nglimpse(loans_full_schema)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 55\n$ emp_title                        <chr> \"global config engineer \", \"warehouse…\n$ emp_length                       <dbl> 3, 10, 3, 1, 10, NA, 10, 10, 10, 3, 1…\n$ state                            <fct> NJ, HI, WI, PA, CA, KY, MI, AZ, NV, I…\n$ homeownership                    <fct> MORTGAGE, RENT, RENT, RENT, RENT, OWN…\n$ annual_income                    <dbl> 90000, 40000, 40000, 30000, 35000, 34…\n$ verified_income                  <fct> Verified, Not Verified, Source Verifi…\n$ debt_to_income                   <dbl> 18.01, 5.04, 21.15, 10.16, 57.96, 6.4…\n$ annual_income_joint              <dbl> NA, NA, NA, NA, 57000, NA, 155000, NA…\n$ verification_income_joint        <fct> , , , , Verified, , Not Verified, , ,…\n$ debt_to_income_joint             <dbl> NA, NA, NA, NA, 37.66, NA, 13.12, NA,…\n$ delinq_2y                        <int> 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0…\n$ months_since_last_delinq         <int> 38, NA, 28, NA, NA, 3, NA, 19, 18, NA…\n$ earliest_credit_line             <dbl> 2001, 1996, 2006, 2007, 2008, 1990, 2…\n$ inquiries_last_12m               <int> 6, 1, 4, 0, 7, 6, 1, 1, 3, 0, 4, 4, 8…\n$ total_credit_lines               <int> 28, 30, 31, 4, 22, 32, 12, 30, 35, 9,…\n$ open_credit_lines                <int> 10, 14, 10, 4, 16, 12, 10, 15, 21, 6,…\n$ total_credit_limit               <int> 70795, 28800, 24193, 25400, 69839, 42…\n$ total_credit_utilized            <int> 38767, 4321, 16000, 4997, 52722, 3898…\n$ num_collections_last_12m         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ num_historical_failed_to_pay     <int> 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ months_since_90d_late            <int> 38, NA, 28, NA, NA, 60, NA, 71, 18, N…\n$ current_accounts_delinq          <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ total_collection_amount_ever     <int> 1250, 0, 432, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ current_installment_accounts     <int> 2, 0, 1, 1, 1, 0, 2, 2, 6, 1, 2, 1, 2…\n$ accounts_opened_24m              <int> 5, 11, 13, 1, 6, 2, 1, 4, 10, 5, 6, 7…\n$ months_since_last_credit_inquiry <int> 5, 8, 7, 15, 4, 5, 9, 7, 4, 17, 3, 4,…\n$ num_satisfactory_accounts        <int> 10, 14, 10, 4, 16, 12, 10, 15, 21, 6,…\n$ num_accounts_120d_past_due       <int> 0, 0, 0, 0, 0, 0, 0, NA, 0, 0, 0, 0, …\n$ num_accounts_30d_past_due        <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ num_active_debit_accounts        <int> 2, 3, 3, 2, 10, 1, 3, 5, 11, 3, 2, 2,…\n$ total_debit_limit                <int> 11100, 16500, 4300, 19400, 32700, 272…\n$ num_total_cc_accounts            <int> 14, 24, 14, 3, 20, 27, 8, 16, 19, 7, …\n$ num_open_cc_accounts             <int> 8, 14, 8, 3, 15, 12, 7, 12, 14, 5, 8,…\n$ num_cc_carrying_balance          <int> 6, 4, 6, 2, 13, 5, 6, 10, 14, 3, 5, 3…\n$ num_mort_accounts                <int> 1, 0, 0, 0, 0, 3, 2, 7, 2, 0, 2, 3, 3…\n$ account_never_delinq_percent     <dbl> 92.9, 100.0, 93.5, 100.0, 100.0, 78.1…\n$ tax_liens                        <int> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ public_record_bankrupt           <int> 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ loan_purpose                     <fct> moving, debt_consolidation, other, de…\n$ application_type                 <fct> individual, individual, individual, i…\n$ loan_amount                      <int> 28000, 5000, 2000, 21600, 23000, 5000…\n$ term                             <dbl> 60, 36, 36, 36, 36, 36, 60, 60, 36, 3…\n$ interest_rate                    <dbl> 14.07, 12.61, 17.09, 6.72, 14.07, 6.7…\n$ installment                      <dbl> 652.53, 167.54, 71.40, 664.19, 786.87…\n$ grade                            <ord> C, C, D, A, C, A, C, B, C, A, C, B, C…\n$ sub_grade                        <fct> C3, C1, D1, A3, C3, A3, C2, B5, C2, A…\n$ issue_month                      <fct> Mar-2018, Feb-2018, Feb-2018, Jan-201…\n$ loan_status                      <fct> Current, Current, Current, Current, C…\n$ initial_listing_status           <fct> whole, whole, fractional, whole, whol…\n$ disbursement_method              <fct> Cash, Cash, Cash, Cash, Cash, Cash, C…\n$ balance                          <dbl> 27015.86, 4651.37, 1824.63, 18853.26,…\n$ paid_total                       <dbl> 1999.330, 499.120, 281.800, 3312.890,…\n$ paid_principal                   <dbl> 984.14, 348.63, 175.37, 2746.74, 1569…\n$ paid_interest                    <dbl> 1015.19, 150.49, 106.43, 566.15, 754.…\n$ paid_late_fees                   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n```\n\n\n:::\n:::\n\n\n\n\n## Selected variables\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nloans <- loans_full_schema %>%\n  select(loan_amount, interest_rate, term, grade, \n         state, annual_income, homeownership, debt_to_income)\nglimpse(loans)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 8\n$ loan_amount    <int> 28000, 5000, 2000, 21600, 23000, 5000, 24000, 20000, 20…\n$ interest_rate  <dbl> 14.07, 12.61, 17.09, 6.72, 14.07, 6.72, 13.59, 11.99, 1…\n$ term           <dbl> 60, 36, 36, 36, 36, 36, 60, 60, 36, 36, 60, 60, 36, 60,…\n$ grade          <ord> C, C, D, A, C, A, C, B, C, A, C, B, C, B, D, D, D, F, E…\n$ state          <fct> NJ, HI, WI, PA, CA, KY, MI, AZ, NV, IL, IL, FL, SC, CO,…\n$ annual_income  <dbl> 90000, 40000, 40000, 30000, 35000, 34000, 35000, 110000…\n$ homeownership  <fct> MORTGAGE, RENT, RENT, RENT, RENT, OWN, MORTGAGE, MORTGA…\n$ debt_to_income <dbl> 18.01, 5.04, 21.15, 10.16, 57.96, 6.46, 23.66, 16.19, 3…\n```\n\n\n:::\n:::\n\n\n\n\n## Selected variables\n\n| variable | type | description |\n|------------------------|------------------------|------------------------|\n| `loan_amount` | numerical, continuous | Amount of the loan received, in US dollars |\n| `interest_rate` | numerical, continuous | Interest rate on the loan, in an annual percentage |\n| `term` | numerical, discrete | The length of the loan, which is always set as a whole number of months |\n| `grade` | categorical, ordinal | Loan grade, which takes a values A through G and represents the quality of the loan and its likelihood of being repaid |\n| `state` | categorical, not ordinal | US state where the borrower resides |\n| `annual_income` | numerical, continuous | Borrower’s annual income, including any second income, in US dollars |\n| `homeownership` | categorical, not ordinal | Indicates whether the person owns, owns but has a mortgage, or rents |\n| `debt_to_income` | numerical, continuous | Debt-to-income ratio |\n\n# Visualizing Continous data\n\n## Describing shapes of numerical distributions\n\n-   shape:\n    -   skewness: right-skewed, left-skewed, symmetric (skew is to the side of the longer tail)\n    -   modality: unimodal, bimodal, multimodal, uniform\n-   center: mean (`mean`), median (`median`), mode (not always useful)\n-   spread: range (`range`), standard deviation (`sd`), inter-quartile range (`IQR`)\n-   unusual observations\n\n# Histogram\n\n## Histogram\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(loans$loan_amount)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   1000    8000   14500   16362   24000   40000 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-5-1.png){width=50%}\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n::: callout-caution\n## Your turn\n\nCreate a histogram for the `interest_rate` variable.\n\n```{webr-r}\nggplot(loans)\n```\n:::\n\n## Histograms and binwidth\n\n::: panel-tabset\n## binwidth = 1000\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 1000)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-6-1.png){width=50%}\n:::\n:::\n\n\n\n\n## binwidth = 5000\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 5000)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-7-1.png){width=50%}\n:::\n:::\n\n\n\n\n## binwidth = 20000\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 20000)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-8-1.png){width=50%}\n:::\n:::\n\n\n\n:::\n\n------------------------------------------------------------------------\n\n:::: callout-caution\n## Your turn\n\n::: panel-tabset\n## Interactive Code\n\nVisualized the histogram and `interest_rate` and modify the binwidth to $\\frac{1}{10}$ of the range of of the `interest_rate` variable.\n\n```{webr-r}\nggplot(loans) +\n  geom_histogram(aes(x = interest_rate))\n```\n\n## Solution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans) +\n  geom_histogram(aes(x = interest_rate), \n                 binwidth = diff(range(loans$interest_rate))/20)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n:::\n::::\n\n## Customizing labels of histograms\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-10-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_histogram(binwidth = 5000) +\n  labs( #<1>\n    x = \"Loan amount ($)\", \n    y = \"Frequency\", \n    title = \"Amounts of Lending Club loans\" \n  ) \n```\n:::\n\n\n\n\n1.  `labs()` can modify axis, legend, and plot labels. You can also use `xlab` and `ylab` to modify labels for x and y axis, respectively.\n:::\n\n------------------------------------------------------------------------\n\n:::: callout-caution\n## Your turn\n\n::: panel-tabset\n## Interactive Code\n\nChange x-axis label to 'Interest Rate (%)'.\n\n```{webr-r}\nggplot(loans) +\n  geom_histogram(aes(x = interest_rate))\n```\n\n## Solution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans) +\n  geom_histogram(aes(x = interest_rate)) +\n  xlab(\"Interest Rate (%)\")\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n:::\n::::\n\n\n## Fill with a categorical variable\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-12-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount, \n                  fill = homeownership)) + #<1>\n  geom_histogram(binwidth = 5000,\n                 alpha = 0.5) + #<2>\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  )\n```\n:::\n\n\n\n\n1.  Add `homeownership` to fill with certain category\n2.  Add `alpha=` argument to set up transparency for the figure\n:::\n\n:::: callout-caution\n## Your turn\n\n::: panel-tabset\n## Interactive Code\n\nUse `grade` to highlight histograms with different grades. Set up the the transparency level to 80%.\n\n```{webr-r}\nggplot(loans) +\n  geom_histogram(aes(x = interest_rate))\n```\n\n## Solution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans) +\n  geom_histogram(aes(x = interest_rate, fill = grade), alpha = 0.8) +\n  xlab(\"Interest Rate (%)\")\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n:::\n::::\n\n## Facet with a categorical variable\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-14-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount, fill = homeownership)) + \n  geom_histogram(binwidth = 5000) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  ) +\n  facet_wrap(~ homeownership, nrow = 3) #<<\n```\n:::\n\n\n\n:::\n\n## Color of bar borders\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-15-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount, fill = homeownership)) + \n  geom_histogram(binwidth = 5000, color = \"white\") +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  ) +\n  facet_wrap(~ homeownership, nrow = 3) #<<\n```\n:::\n\n\n\n:::\n\n## Position of Histogram Bars\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount, fill = homeownership)) + \n  geom_histogram(binwidth = 5000, position = position_dodge()) +\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Frequency\",\n    title = \"Amounts of Lending Club loans\"\n  ) \n```\n:::\n\n\n\n:::\n\n# Density plot\n\n## Density plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_density()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n\n\n## Density plots and adjusting bandwidth\n\n::: panel-tabset\n## adjust = 0.5\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_density(adjust = 0.5)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-18-1.png){width=100%}\n:::\n:::\n\n\n\n\n## adjust = 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_density(adjust = 1) # default bandwidth\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-19-1.png){width=100%}\n:::\n:::\n\n\n\n\n## adjust = 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_density(adjust = 2)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-20-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n## Customizing density plots\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-21-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount)) +\n  geom_density(adjust = 2) +\n  labs( #<<\n    x = \"Loan amount ($)\", #<<\n    y = \"Density\", #<<\n    title = \"Amounts of Lending Club loans\" #<<\n  ) #<<\n```\n:::\n\n\n\n:::\n\n## Adding a categorical variable\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-22-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = loan_amount, \n                  fill = homeownership)) + #<<\n  geom_density(adjust = 2, \n               alpha = 0.5) + #<<\n  labs(\n    x = \"Loan amount ($)\",\n    y = \"Density\",\n    title = \"Amounts of Lending Club loans\", \n    fill = \"Homeownership\" #<<\n  )\n```\n:::\n\n\n\n:::\n\n# Box plot\n\n## Box plot\n\n-   Boxplot visualises five summary statistics (the median, two hinges and two whiskers), and all \"outlying\" points individually.\n    -   The lower and upper **hinges** correspond to the first and third quartiles (the 25th and 75th percentiles).\n    -   The **whiskers** extend from the hinge to the smallest and largest value no further than 1.5 \\* IQR from the hinge (where IQR is the inter-quartile range, or distance between the first and third quartiles).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n\n## Box plot and outliers\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = annual_income)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n\n## Customizing box plots\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-25-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = interest_rate)) +\n  geom_boxplot() +\n  labs(\n    x = \"Interest rate (%)\",\n    y = NULL,\n    title = \"Interest rates of Lending Club loans\"\n  ) +\n  theme( #<<\n    axis.ticks.y = element_blank(), #<<\n    axis.text.y = element_blank() #<<\n  ) #<<\n```\n:::\n\n\n\n:::\n\n## Adding a categorical variable\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-26-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = interest_rate,\n                  y = grade)) + #<<\n  geom_boxplot() +\n  labs(\n    x = \"Interest rate (%)\",\n    y = \"Grade\",\n    title = \"Interest rates of Lending Club loans\",\n    subtitle = \"by grade of loan\" #<<\n  )\n```\n:::\n\n\n\n:::\n\n# Relationships numerical variables\n\n## Scatterplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n\n\n## Hex plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n  geom_hex()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n\n\n## Hex plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans %>% filter(debt_to_income < 100), \n       aes(x = debt_to_income, y = interest_rate)) +\n  geom_hex()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n\n\n# Visualize Categorical Variable\n\n## Bar plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = homeownership)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n\n\n## Segmented bar plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = homeownership, \n                  fill = grade)) + #<<\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n\n## Segmented bar plot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = homeownership, fill = grade)) +\n  geom_bar(position = \"fill\") #<<\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n\n\n------------------------------------------------------------------------\n\n::: callout-note\n## Question\n\nWhich bar plot is a more useful representation for visualizing the relationship between homeownership and grade?\n:::\n\n::::: columns\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-33-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-34-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Customizing bar plots\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-35-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(y = homeownership, #<<\n                  fill = grade)) +\n  geom_bar(position = \"fill\") +\n  labs( #<<\n    x = \"Proportion\", #<<\n    y = \"Homeownership\", #<<\n    fill = \"Grade\", #<<\n    title = \"Grades of Lending Club loans\", #<<\n    subtitle = \"and homeownership of lendee\" #<<\n  ) #<<\n```\n:::\n\n\n\n:::\n\n# Relationships between numerical and categorical variables\n\n## Already talked about...\n\n-   Colouring and faceting histograms and density plots\n-   Side-by-side box plots\n\n## Violin plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(loans, aes(x = homeownership, y = loan_amount)) +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n\n\n## Ridge plots\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggridges)\nggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) + \n  geom_density_ridges(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n\n\n# Designing effective visualizations\n\n## Keep it simple\n\n::::: columns\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/pie-3d.jpg){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/pie-to-bar-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Use color to draw attention\n\n::::: columns\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-38-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-39-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\n## Tell a story\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/time-series-story.png){width=80%}\n:::\n:::\n\n\n\n\n> Credit: Angela Zoss and Eric Monson, Duke DVS\n\n# Principles for effective visualizations\n\n## Principles for effective visualizations\n\n-   Order matters\n-   Put long categories on the y-axis\n-   Keep scales consistent\n-   Select meaningful colors\n-   Use meaningful and nonredundant labels\n\n## Data\n\nIn September 2019, YouGov survey asked 1,639 GB adults the following question:\n\n::::: columns\n::: column\n> In hindsight, do you think Britain was right/wrong to vote to leave EU?\n>\n> -   Right to leave\\\n> -   Wrong to leave\\\n> -   Don't know\n:::\n\n::: column\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-42-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n:::::\n\nSource: [YouGov Survey Results](https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/document/x0msmggx08/YouGov%20-%20Brexit%20and%202019%20election.pdf), retrieved Oct 7, 2019\n\n# Order matters\n\n## Alphabetical order is rarely ideal\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-43-1.png){width=960}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(x = opinion)) +\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n## Order by frequency\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-44-1.png){width=960}\n:::\n:::\n\n\n\n\n## Code\n\n`fct_infreq`: Reorder factors' levels by frequency\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(x = fct_infreq(opinion))) + #<<\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n## Clean up labels\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-45-1.png){width=960}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(x = opinion)) +\n  geom_bar() +\n  labs( #<<\n    x = \"Opinion\", #<<\n    y = \"Count\" #<<\n  ) #<<\n```\n:::\n\n\n\n:::\n\n## Alphabetical order is rarely ideal\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-46-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(x = region)) +\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n## Use inherent level order\n\n::: panel-tabset\n## Relevel\n\n`fct_relevel`: Reorder factor levels using a custom order\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrexit <- brexit %>%\n  mutate(\n    region = fct_relevel( #<<\n      region,\n      \"london\", \"rest_of_south\", \"midlands_wales\", \"north\", \"scot\"\n    )\n  )\n```\n:::\n\n\n\n\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-47-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## Clean up labels\n\n::: panel-tabset\n## Recode\n\n`fct_recode`: Change factor levels by hand\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrexit <- brexit %>%\n  mutate(\n    region = fct_recode( #<<\n      region,\n      London = \"london\",\n      `Rest of South` = \"rest_of_south\",\n      `Midlands / Wales` = \"midlands_wales\",\n      North = \"north\",\n      Scotland = \"scot\"\n    )\n  )\n```\n:::\n\n\n\n\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/recode-plot-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n# Put long categories on the y-axis\n\n## Long categories can be hard to read\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-48-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Move them to the y-axis\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-49-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = region)) + #<<\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n## And reverse the order of levels\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-50-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n`fct_rev`: Reverse order of factor levels\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = fct_rev(region))) + #<<\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n## Clean up labels\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-51-1.png){width=100%}\n:::\n:::\n\n\n\n\n\\]\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = fct_rev(region))) +\n  geom_bar() +\n  labs( #<<\n    x = \"Count\", #<<\n    y = \"Region\" #<<\n  ) #<<\n```\n:::\n\n\n\n:::\n\n# Pick a purpose\n\n## Segmented bar plots can be hard to read\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-52-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = region, fill = opinion)) + #<<\n  geom_bar()\n```\n:::\n\n\n\n:::\n\n## Use facets\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-53-1.png){width=100%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = region)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1) #<<\n```\n:::\n\n\n\n:::\n\n## Avoid redundancy?\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-54-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Redundancy can help tell a story\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-55-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1)\n```\n:::\n\n\n\n:::\n\n## Be selective with redundancy\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-56-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1) +\n  guides(fill = \"none\") #<<\n```\n:::\n\n\n\n:::\n\n## Use informative labels\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-57-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\", #<<\n    x = NULL, y = NULL\n  )\n```\n:::\n\n\n\n:::\n\n## A bit more info\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-58-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\", #<<\n    caption = \"Source: https://d25d2506sfb94s.cloudfront.net/cumulus_uploads/document/x0msmggx08/YouGov%20-%20Brexit%20and%202019%20election.pdf\", #<<\n    x = NULL, y = NULL\n  )\n```\n:::\n\n\n\n:::\n\n## Let's do better\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-59-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1) +\n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\", #<<\n    x = NULL, y = NULL\n  )\n```\n:::\n\n\n\n:::\n\n## Fix up facet labels\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-60-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region,\n    nrow = 1,\n    labeller = label_wrap_gen(width = 12) #<<\n  ) + \n  guides(fill = \"none\") +\n  labs(\n    title = \"Was Britain right/wrong to vote to leave EU?\",\n    subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n    caption = \"Source: bit.ly/2lCJZVg\",\n    x = NULL, y = NULL\n  )\n```\n:::\n\n\n\n:::\n\n# Select meaningful colors\n\n## Rainbow colors not always the right choice\n\n[Nicola Rennie's Blog: Working with colours in R](https://nrennie.rbind.io/blog/colours-in-r/)\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-61-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Manually choose colors when needed\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-62-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1, labeller = label_wrap_gen(width = 12)) +\n  guides(fill = \"none\") +\n  labs(title = \"Was Britain right/wrong to vote to leave EU?\",\n       subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n       caption = \"Source: bit.ly/2lCJZVg\",\n       x = NULL, y = NULL) +\n  scale_fill_manual(values = c( #<<\n    \"Wrong\" = \"red\", #<<\n    \"Right\" = \"green\", #<<\n    \"Don't know\" = \"gray\" #<<\n  )) #<<\n```\n:::\n\n\n\n:::\n\n## Choosing better colors\n\n[Source: colorbrewer2.org](https://colorbrewer2.org/)\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](images/color-brewer.png){width=60%}\n:::\n:::\n\n\n\n\n## Use better colors\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-64-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1, labeller = label_wrap_gen(width = 12)) +\n  guides(fill = \"none\") +\n  labs(title = \"Was Britain right/wrong to vote to leave EU?\",\n       subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n       caption = \"Source: bit.ly/2lCJZVg\",\n       x = NULL, y = NULL) +\n  scale_fill_manual(values = c(\n    \"Wrong\" = \"#ef8a62\", #<<\n    \"Right\" = \"#67a9cf\", #<<\n    \"Don't know\" = \"gray\" #<<\n  ))\n```\n:::\n\n\n\n:::\n\n## Select theme\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](ESRM6990V_Lecture09_files/figure-revealjs/unnamed-chunk-65-1.png){width=90%}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(brexit, aes(y = opinion, fill = opinion)) +\n  geom_bar() +\n  facet_wrap(~region, nrow = 1, labeller = label_wrap_gen(width = 12)) +\n  guides(fill = \"none\") +\n  labs(title = \"Was Britain right/wrong to vote to leave EU?\",\n       subtitle = \"YouGov Survey Results, 2-3 September 2019\",\n       caption = \"Source: bit.ly/2lCJZVg\",\n       x = NULL, y = NULL) +\n  scale_fill_manual(values = c(\"Wrong\" = \"#ef8a62\",\n                               \"Right\" = \"#67a9cf\",\n                               \"Don't know\" = \"gray\")) +\n  theme_minimal() #<<\n```\n:::\n\n\n\n:::\n\n## Resource\n\n1.  [DataScienceBox's GitHub](https://github.com/tidyverse/datascience-box/tree/main/course-materials/_slides/u2-d03-viz-num)\n2.  [datasciencebox.org](https://datasciencebox.org/)\n3.  [Using ggplot2 in packages](https://ggplot2.tidyverse.org/articles/ggplot2-in-packages.html#best-practices-for-common-tasks)\n",
    "supporting": [
      "ESRM6990V_Lecture09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}