---
title: "Communities in Psychometric Networks?"
author: "Jihong Zhang"
institute: | 
  Educational Statistics and Research Methods (ESRM) Program*
  
  University of Arkansas
date: "2025-03-07"
draft: false
bibliography: references.bib
csl: apa.csl
image: index_files/figure-html/plot-1.png
categories:
  - R
  - Network
citation:
  type: webpage
  issued: 2025-03-07
execute: 
  warning: false
  message: false  
format: 
  html:
    code-tools: false
    code-line-numbers: false
    toc-depth: 2
    toc-expand: true
    code-fold: true
    code-summary: "Click this to see R code"
---

::: objectives
## Overview {.unnumbered}

A friend of mine recently asked me one question about network community: in her recent research, a network without community defined has different estimation with the one with community define. In this blog, I try to dive a little deeper into community issues in network analysis.

This [blog](https://psych-networks.com/r-tutorial-identify-communities-items-networks/) aims to talk about varied aspects of *community detection* in psychometric network analysis, including the following questions:

1.  What is "node community"?
2.  Why we need communities of nodes in network analysis?
3.  How to identify communities?
:::

```{r plot, cache=TRUE}
#| fig-height: 7
#| fig-width: 10
library("psychonetrics")
# Load bfi data from psych package:
library("psychTools")
data(bfi)

# Also load dplyr for the pipe operator:
library("dplyr")

# Let's take the agreeableness items, and gender:
ConsData <- bfi %>% 
  select(A1:A5, gender) %>% 
  na.omit # Let's remove missingness (otherwise use Estimator = "FIML)

# Define variables:
vars <- names(ConsData)[1:5]

# Saturated estimation:
mod_saturated <- ggm(ConsData, vars = vars)

# Run the model:
mod_saturated <- mod_saturated %>% runmodel

# We can look at the parameters:
# mod_saturated %>% parameters

# Labels:
labels <- c(
  "indifferent to the feelings of others",
  "inquire about others' well-being",
  "comfort others",
  "love children",
  "make people feel at ease")
# We can also fit an empty network:
mod0 <- ggm(ConsData, vars = vars, omega = "zero")

# Run the model:
mod0 <- mod0 %>% runmodel

# We can look at the modification indices:
# mod0 %>% MIs

# To automatically add along modification indices, we can use stepup:
mod1 <- mod0 %>% stepup

# Let's also prune all non-significant edges to finish:
mod1 <- mod1 %>% prune

qgraph::qgraph(getmatrix(mod1, "omega"),
               layout="spring",
               groups = labels,
               title = "Big 5 agreeableness",
               theme = "Borkulo")
```

## Big Problem in the network

[A]{.bigger}s said in Eiko's post [@friedTutorialHowIdentify2016] and I cited here â€“ authors sometimes *over-interpret* the network visualization of their data that some meaningful modules exist. This over-interpretation may have Type I error (mistakenly cluster nodes with acutally weak connections in a community) or Type II error (fail to cluster nodes with strong connection into a community). In other words, researchers found that relying on visual inspection of network structure can not obtain reliable conclusion about which nodes should be clustered together and which ones should not be clustered, especially in a complicated network structure (say \> 20 nodes).

Identification of node clusters is not a new topic, which is typically called "*Community Detection*" in graph theory [@fortunatoCommunityDetectionGraphs2010]. This problem arises due to a phenomenon called "Community Structure"[@girvanCommunityStructureSocial2002] or "Clustering" was found in varied types of networks. This community structure has two characteristics:

1.  Heterogeneity of node degree: nodes with high degree (more neighbors/ high betweenness) coexist with nodes with low degree.
2.  Heterogeneity of edge strength: high concentrations of edges with certain "group" of nodes even though those "groups" are visual inspected.

Given this community structure, *Community* (or called clusters or modules) is defined as **groups of nodes which probably share common properties and / or play similar roles within the graph** [@fortunatoCommunityDetectionGraphs2010]. This is actually a very broad definition which does not answer what are "common properties" and "similar roles" in a network graph. The reason of this vagueness is because of variety of network in different areas.

For example, within a social network with each person as node and social relationship between two people as edge, social communities could be *family*, *company*, or any other social groups. In this case, "common properties" of social community may be emotional pattern due to the family education, behavioral pattern under company policy. In protein-protein interaction networks, communities are likely to group proteins having the same specific function within the cell. In the graph of the World Wide Web they may correspond to groups of web pages dealing with the same or related topics.

[B]{.bigger}ack to the community conceptualization in psychological research, especially psychiatry, the community is associated with *syndromes* or *comorbidity*. According to [Wikipedia](https://en.wikipedia.org/wiki/Syndrome), a syndrome is a set of medical signs and symptoms which are correlated with each other and often associated with a particular disease or disorder. Some psychological syndromes may present comorbidity of symptoms, which refers to simultaneous presence of two or more psychological symptoms in a same individual within a time frame (co-occurring, concurrent). In a earlier paper of @borsboomStructureDSM2002, Borsboom took the example of DSM-IV network and claimed that "commodity appears to be, at least partially and in particular for mood, anxiety, and substance abuse disorders, encoded in the structure of the diagnostic criteria themselves" [@borsboomStructureDSM2002], but he did not link the "commodity" of a cluster of highly-connected symptoms to the statistical concept "community" in network graph. It is until the paper of @cramerComorbidityNetworkPerspective2010, the symptom community as a local connectivity was considered as *syndromes*, while symptoms clusters are interconnected by individual symptoms ("bridge symptoms") that form the boundaries between the various basic syndromes of psychiatric disorders [@goekoopNetworkViewPsychiatric2014]. @goekoopNetworkViewPsychiatric2014 also emphasized that the presence of bridge symptoms that connects symptom clusters (communities / syndromes) plays a key role that can be identified as potential targets for treatment.

## Community Detection Algorithm

There are many previous studies comparing different community detection [@yangComparativeAnalysisCommunity2016; @gatesMonteCarloEvaluation2016]. @christensenComparingCommunityDetection2024 recently conducted a Monte-Carlo simulation study compared various node community detection algorithm in the framework of latent factor analysis. To interpret the results, @christensenComparingCommunityDetection2024 even create a [Shiny App](https://alex-christensen.shinyapps.io/community_detection_results/) the results.

| Algorithm | Feature | Citation |
|--------------|-----------------------------|-----------------------------|
| Walktrap | random walks | @ponsComputingCommunitiesLarge2006 |
| Infomap | random walks | @rosvallMapsRandomWalks2008 |
| Fast-greedy | hierarchical clustering; modularity-based | @clausetFindingCommunityStructure2004 |
| Louvian | hierarchical clustering; modularity-based | @blondelFastUnfoldingCommunities2008 |
| Leading Eigenvalue | eigenvalue | @newmanModularityCommunityStructure2006 |
| Label Propagation | non-parametric | @raghavanLinearTimeAlgorithm2007 |
| Spinglass | non-parametric | @reichardtStatisticalMechanicsCommunity2006 |
| Edge Betweenness | non-parametric | @girvanCommunityStructureSocial2002 |
| Triangulated Maximally Filtered Graph (TMFG) | score based | @massaraNetworkFilteringBig2017 |
| Parallel Analysis | EFA |  |
