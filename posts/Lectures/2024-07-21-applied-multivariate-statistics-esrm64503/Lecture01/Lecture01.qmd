---
title: "Lecture 01: Introduction and Overview"
subtitle: "Introduction to R and Rstudio"
author: "Jihong Zhang*, Ph.D"
institute: | 
  Educational Statistics and Research Methods (ESRM) Program*
  
  University of Arkansas
date: "2024-08-18"
sidebar: false
format: 
  html: 
    page-layout: full
    toc: true
    toc-depth: 2
    lightbox: true
  uark-revealjs:
    chalkboard: true
    embed-resources: false
    code-fold: true
    number-sections: true
    number-depth: 1
    footer: "ESRM 64503: Lecture01"
    slide-number: c/t
    tbl-colwidths: auto
    output-file: slides-index.html
#jupyter: python3
---

## Presentation Outline

1.  Introduce ourselves

2.  Go through the syllabus

3.  Introduce R and Rstudio

## Self Introduction

::: {.columns .column-screen}
::: {.column width="33%"}
![University of Kansas](figures/school_ku.png){fig-align="center" width="73%"}
:::

::: {.column width="33%"}
![University of Iowa](figures/school_ui.png){fig-align="center" width="73%"}
:::

::: {.column width="33%"}
![Life in Hong Kong](figures/hongkong_living.jpg){fig-align="center" width="75%"}
:::
:::

## It is your turn

-   Tell me:

    1.  Your name
    2.  Department name
    3.  Which year in your program
    4.  Anything else you want to share

## What To Expect This Semester

-   I believe that everyone **is capable** and can **significantly benefit** from learning varied types of multivariate analysis

    -   The hard part is the working memory load, not the math

-   **Philosophy**: Focus on accessibility + learning-by-doing

    -   The AMS class heavily emphasize on hands-on task-oriented practices

    -   **No** anxiety-prone tasks (e.g., hand calculations, memorizing formulas)

    -   **No** anxiety-prone methods of evaluation (e.g., timed tests)

-   **Materials**[^1][^2]**:**

    -   **Lecture** slides present concepts—the **what** and the **why**

    -   **Example** documents: reinforce the concepts and demonstrate the **how** using software—R packages

    -   All available at the [course website](https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/) (hosted outside of Blackboard)

        -   [Let me can show you how to use the website]{.underline}

[^1]: Prof. Lesa Hoffman's website: <https://www.lesahoffman.com/PSQF6270/index.html>

[^2]: Prof. Jonathan Templin's EPSY905: <https://jonathantemplin.com/fundamentals-multivariate-modeling-spring-2018-epsy-905/>

## Course Requirements

-   **8 in-class quiz** (16 points): formative assessments aiming for refreshing our memory in last week

    -   An opportunity for you to request topics for further clarification and review

    -   Typically 2-3 questions that can be finished in 15 minutes

-   **4 homework assignments** (HW1-4, 84 points): Practice doing data analysis

    -   Based directly on example given (no googling or ChatGPT needed, ever)

    -   **Homework 1-3**: unique canned dataset

        -   Answered online homework portal

    -   **Homework 4: individual data analysis + written results section**

        -   Get my feedback for using a model of your choice on your data + optional revision

-   **Extra points** (10 points, **HW0**)

    -   I will show you how to use the system using Homework 0 as the example

## Our Other Responsibility

-   My job (besides providing materials and assignments):

    -   **Answer questions** via email, in individual meetings, or in group-based zoom office hours—you can each work on homework during office hours and get immediate assistance (and then keep working)

        -   Email me first

-   Your job (in descending order of timely importance):

    -   **Ask questions**—preferably in class, but any time is better than none

    -   **Frequently review** the class material, focusing on mastering the vocabulary, logic, and procedural skills

    -   Don't wait until the last minute to start homework, and don't be afraid to **ask for help if you get stuck** on one thing for more than 15 minutes

        -   Please email me (jzhang\@uark.edu) a screenshot of your code+error so I can respond easily

    -   **Practice** using the software to implement the techniques you are learning on **data you care about**

    -   **Do the readings** for a broader perspective and additional example (best after the lecture)

## More About Your Experience in this Class

-   **Attendance**: Strongly recommended but not required

    -   **Please do not attend in-person if you might be sick!**

    -   You can also join the class via Zoom

    -   You won't miss out: I will post **YouTube** recordings (audio + screenshare) by requested at the course website.

-   **Changes** will be sent via email by 9 am on class days

    -   I will update the homework and in-class quiz links on class days. If not uploaded, then there are two situations: (1) I forget to do that. I will re-upload later and notify you by emails. (2) I decide not to upload it or remove it.

    -   I may change to zoom-only for dangerous weather or if I am sick.

## Statistical Software

-   I will show examples primarily using **R and R packages**. Some important R packages include:

    -   **Tidyverse**: a comprehensive R package including multiple mini packages for multiple data cleaning, data transformation.

    -   **ggplot2**: a popular package for data visualization

-   **Why not SPSS?**

    -   SPSS could only be used for some—but not all–of our content

    -   More importantly, it doesn't have as much room to grow; R has many new packages being developed via CRAN and GitHub

-   **Why not SAS?**

    -   SAS is not **open-sourced**, meaning that we cannot check source code if something goes wrong

    -   SAS is also commercial, but R is free

------------------------------------------------------------------------

-   **Why not Python, Julia, STAT or other software (e.g., matlab)?**

    -   They are not so popular in the relevant fields of educational statistics, which means you cannot get much support from the community.

    -   But I think Python and Julia are worth learning! If you have Python / Julia code or tips that related to our course, [please share them with me! I will give you extra points]{.underline}

-   **My story**: I am a heavy-duty R user:

    -   I use R for almost everything (like course/conference slides, website building, data analysis, paper writing)

    -   I am also learning Julia and Python but not plan to add them to my classes

    -   I know how to use Mplus but do not use it very often

## Why R?

-   There are some point to consider

    -   R packages are only as good as their authors (so little quality control)

    -   Syntax and capabilities are idiosyncratic to the packages

-   **The good things** are:

    -   If you really master R, you can do by yourself (write your own algorithm for complex model)

    -   You can check the source code of R packages and know where issues come from

    -   You can communicate with R package authors and provide some suggestions

    -   You can be R package author yourself and be famous

## Working with Programs Through Syntax

-   If you feel the class is not so challenging for you, you can see materials for my other class, [ESRM 6553: Advanced Multivariate Analysis](https://jihongzhang.org/posts/Lectures/2024-01-12-syllabus-adv-multivariate-esrm-6553/)

-   I DO NOT need you to memorize syntax

-   Instead, you can do exactly what I (still) do:

    -   **Find the example source file** for what you need to do

    -   Figure out how to **modify it** to work for your homework

    -   Copy (CTRL+C), paste (CTRL+V), and find and replace are your friends

-   Don't hesitate to ask for help (i.e., email me a screenshot)

## What You Are Supposed To Know Already

-   Recommended prerequisite:

    -   ESRM 64103. Experimental Design in Education **or similar classes**

    -   ESRM 64203. Multiple Regression Techniques for Education **or similar classes**

-   **What we will cover this semester:**

    -   Basic usage of R and RStudio (i.e., R download, package installation, package loading)

    -   Descriptive statistics and bivariate associations (e.g., correlation)

    -   **Statistical concepts** (e.g., null hypothesis testing, maximum likelihood estimation)

    -   **Generalized linear models** (i.e., regression, ANOVA, path analysis, factor analysis)

-   This class will focus on **multivariate analysis**... so what is that?

## What are Multivariate Analysis?

::: columns
::: {.column .nonincremental width="50%"}
> -   **Multivariate statistics** is a subdivision of statistics encompassing the simultaneous observation and analysis of **more than one outcome variable (Dependent Variables / DVs)**.
>
> – Wikipedia

-   Many different multivariate analysis models used multivariate statistics:

    -   Generalized linear regression

    -   Principal components analysis (PCA)

    -   Path analysis

    -   Factor analysis (FA)

    -   Network analysis (NA)
:::

::: {.column width="50%"}
![Word Cloud of MVA wiki](figures/wordcloud.png){fig-align="left" width="100%"}
:::
:::

## Why Use Multivariate Statistics

Compared to univariate analysis, **Multivariate Statistics** provides a more thorough picture of the reality.

Imagine our theory of depression support following two models:

![](figures/Models.png){fig-align="left"}

**Note: Not all theoretical models can be estimated via statistics**

## What We Will Cover This Semester

::: columns
::: {.column width="50%"}
-   **Part I: General linear models**
    -   Introduction/Descriptive statistics
    -   Simple, Marginal, Interaction Effects
    -   Multivariate Linear Models
    -   Extension: Generalized linear regression
        -   Predicting non-normal conditional outcomes
-   **Part II: Statistical techniques**
    -   Normal Distributions and Multivariate Normal Distribution
    -   Maximum Likelihood Estimation (MLE)
    -   Missing Data and Multiple Imputation
:::

::: {.column width="50%"}
-   **Part III: Path Analysis**
    -   Structural models
-   **Part IV: Latent variable models**
    -   Principle component analysis (PCA)
    -   Exploratory factor analysis (EFA)
    -   Confirmatory factor analysis (CFA)
    -   Latent class models (LCA) or mixture models
:::
:::

## Introduction to R

::: columns
::: {.column width="50%"}
-   **R** is an comprehensive statistical and graphical programming language

-   We can use **R language** via multiple graphical user inferences or IDE, i.e., terminal, VS Code or RStudio.

    -   We will mainly focus on RStudio because of its convenience

    -   Rstudio is a product of posit company and is free to use for personal use
:::

::: {.column width="50%"}
::: panel-tabset
## Terminal

![](figures/terminal.png){fig-align="left" width="100%"}

## Rstudio

![](figures/Rstudio.png){fig-align="left" width="100%"}

## VSCode

![](figures/VsCode.png){fig-align="left" width="100%"}
:::
:::
:::

## More RStudio

![](figures/Rstudio_labelled.png){fig-align="left" width="100%"}

## Installation of R and RStudio

-   You can download and install **R base** via r-project.org (currently R-4.4.1)

    -   for [Linux](https://cloud.r-project.org/bin/linux/)

    -   for [Windows](https://cloud.r-project.org/bin/windows/)

    -   for [MacOS](https://cloud.r-project.org/bin/macosx/)

-   Then, after the installation of R, you can download RStudio via posit.co (currently)

    -   for [Windows](https://download1.rstudio.org/electron/windows/RStudio-2024.04.2-764.exe)

    -   for [MacOS](https://download1.rstudio.org/electron/macos/RStudio-2024.04.2-764.dmg)

-   After installation of R and RStudio, you can open up the RStudio to start your R programming.

    -   however, your R only has the **base** package

    -   To enhance its utility, most users will install **R packages** for certain purposes

## R packages

-   R packages are uploaded to some platforms (i.e., CRAN or Github) by researchers or companies

    -   Those R packages typically have their version numbers. Some functions may be available for some version (like Ver. 1.1) but not be available in other versions.

    -   Do not upgrade your packages if you code is running well

-   R users are free to download and use those R packages

    -   To download certain package, you should know package name

    -   For example, if you want to download the latest version of `tidyverse` package, you can type in following command in **the console panel** of Rstudio

    ```{r}
    #| eval: false
    #| echo: true
    #| code-fold: false
    install.packages("tidyverse")
    ```

    -   Or if you want to install the older version of package

    ```{r}
    #| eval: false
    #| echo: true
    #| code-fold: false
    require(devtools)
    install_version("tidyverse", version = "1.3.0", repos = "http://cran.us.r-project.org")
    ```

## More about R packages

-   **CRAN** (Comprehensive R Archive Network) is a network of servers around the world that store identical, up-to-date, versions of code and documentation for R.
    -   It contains most stable version of packages.
    -   Most of time, we download package from CRAN
-   **Github** is for the fast development for R packages
    -   It contains the up-to-date version of R which may potentially be unstable

    -   You can download the package from Github using `pak` package

        ```{r}
        #| eval: false
        #| echo: true
        #| code-fold: false
        pak::pak("tidyverse/ggplot2")
        ```

    -   You can update the package and its dependencies

        ```{r}
        #| eval: false
        #| echo: true
        #| code-fold: false
        pak::pkg_install("ggplot2", upgrade = TRUE)
        ```

## R functions

-   To operate certain tasks, you need to use functions contained in R packages

    -   There are two ways of using R functions

    -   **Direct way**: you don't have to load your package first

    -   ![](figures/function.png){width="100%"}

    -   **Use-after-load way**: Package is loaded in your session before you can call the function name without specifying the package name

        ```{r}
        #| eval: false
        #| echo: true
        #| code-fold: false
        require(pak)
        pkg_install("ggplot2", upgrade = TRUE)
        ```

## R functions (Cont.)

-   How do you know you already load the package or not

-   You can use `sessionInfo` function

    ```{r}
    #| echo: true
    #| code-fold: false
    sessionInfo()
    ```

-   It outputs multiple info:

    -   R version, Operations System, Matrix operation package, Locale

    -   **Attached packages** (you can call the functions of those package)

    -   **Loaded package via a namespace (and not attached)**, which you cannot call functions and need to `library` or `require` them

## Run R code

-   After you finish R script, you have multiple ways of running the code:

    -   **Method 1**: you can click `Run` button in the top right-head of **Rstudio**

    -   **Method 2**: you can select certain code and press `Ctrl + Enter` (Win) or `Command + Return` (Mac)

    -   **Method 3**: you can `Rscript [FILENAME].r` to run the whole script

    -   **Method 4**: you can using R notebook to interactively run R code

+----------------------------+-------------------+-----------------------------+
|                            | Script file is .R | Script file is .rmd or .qmd |
+============================+===================+=============================+
| **Run the whole script**   | -   Method 1      | -   Method 4                |
|                            | -   Method 3      |                             |
+----------------------------+-------------------+-----------------------------+
| **Run the partial script** | -   Method 2      | -   Method 4                |
+----------------------------+-------------------+-----------------------------+

: {.striped}

## Example 1: More Usage about R

-   Open up [MakeFriendsWithR.qmd](MakeFriendsWithR.qmd)

## Example 2: Homework Portal

-   Homework online portal will be delivered on the website

-   The homework system is based on Microsoft Form. You can answer the questions via Laptop, PC or Mobile Phone.

    -   Make sure your device connect to the Internet.

-   Let me use [Homework 0](https://jihongzhang.org/posts/Lectures/2024-07-21-applied-multivariate-statistics-esrm64503/HWs/HW_demo.html) as one example.

## Summary

1.  Note that the syllabus, schedule, and all materials are uploaded online the week before class.
2.  We learn that R, Rstudio, and Quarto (*.qmd*) can be used to execute R code/syntax.
3.  In-class quiz will be administered in the begining of class. Should be quick and easy. Don't be stressful ever!
4.  Office hour will be 2PM - 4PM on Tuesday. Feel free to stop by my office and ask questions.
5.  Next week, we will start to reiterate general linear regression.

## Next Week

We will:

1.  Talk about descriptive statistics, data visualization and general linear model
2.  HW0 will be due before **CLASS BEGINS** on Monday
