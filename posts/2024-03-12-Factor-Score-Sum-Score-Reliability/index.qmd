---
title: 'Sum Score, Factor Score, and Reliability'
author: 'Jihong Zhang'
date: 'Mar 12 2024'
categories:
  - Scoring
  - Reliability
  - CTT
  - Factor Analysis
execute: 
  warning: false
  message: false
citation: true
format: 
  html:
    code-fold: true
    code-line-numbers: false
bibliography: references.bib
csl: apa.csl
---

Network psychometrics has become an alternative approach to factor analysis and item response theory in multiple fields of psychology and education, such as psychopathology, personality, measurement validation, and dimensionality determancy. However, individual scoring differences between psychometric network analysis and traditional psychometric modeling has not been well investigated. Some questions arise regarding individual scoring:

1.  What will be individual scores in psychometric network analysis? Or, how can we evaluate the average level of each individuals?
2.  If we can build individual scoring in psychometric network, what is the relationship between this scoring with factor scores.
3.  How can we use this scoring method to evaluate measurement quality, such as reliability or validity?

To answer these questions, we first need to review how individuals are scored in factor analysis method and classical test theory. Borrowing the theoretical framework and purpose of factor scoring, we can construct the scoring method for psychometric network. Then, we can show that there are statistical relationship between network scores with factor scores. Thus, depending on the psychometric methods researchers use, they can be free to use either factor score or network score to report. They can also compute the other without constructing the other model.

Overall, the purpose of this post is to illustrate the definition, assumption, psychometric properties, usage, and interpretation of factor scores in Structural Equation Models (SEM), and how those features of factor scores compare to sum scores in Classical Test Theory (CTT). This post is inspired by Dr. Templin's [2022 presentation](https://jonathantemplin.com/wp-content/uploads/2022/10/sem15pre906_lecture11.pdf).

## Definition of Test Score

In CTT, the test score is unit of analysis of the whole test, which can be statistically expressed as:

$$
Y_{total} = T+e
$$

Where $Y_{total}$ denotes test scores, $T$ denotes true score, and $e$ denotes error. There are some assumptions:

1.  Items are assumed exchangeable;
2.  Expected value of $e$ is 0;
3.  Error $e$ is expected to be uncorrelated with true score $T$

## Scoring of Classical test theory

In classical test theory (CTT), the test score is construct as sum of item scores. CTT assumes that there is a true score exists that reflect the true ability of test takers and the observed sum scores of each individual is a combination of true score and random error.

$$
Y_{total} = T + e
$$

Where $Y_{total}$ denotes a vector of observed sum scores of respondents, $T$ denotes a vector of true scores of respondents, and $e$ denotes the random error for respondents. True scores and random errors are independent.

### CTT-based reliability

Multiple reliability coefficients have been proposed in previous literature. Each reliability has their advantages and disadvantages. Let's take the average iter-item correlation as one example. Average iter-item correlation is computed as the proportion of variance in the sum score that is due to variation in the latent trait or true score.

We can derive the reliability as following:

$$
\text{Var}(Y_{total}) = \text{Var}(T+e) = \text{Var}(T)+\text{Var}(e)+2\text{Cov}(T,e)
$$

But, since T and e are assumed independent $\text{Cov}(T, e) = 0$, so,

$$
\text{Var}(Y_{total}) = \text{Var}(T)+\text{Var}(e)
$$

Then, reliability can be computed as:

$$
\rho = \frac{\text{Var}(T)}{\text{Var}(Y)} = \frac{\text{Var}(T)}{\text{Var}(T)+\text{Var}(e)} 
$$

Where,

-   $\text{Var}(T)$ is variance of true score and could be interpreted as variability in the latent trait in the context of factor analysis.

-   $\text{Var}(e)$ is variance of error, and could be interpreted as measurement error

#### Mini example

Using a 10-item example with each having 1-5 scale.

```{r}
#| code-fold: true
#| code-summary: 'Data Read-in'
library(tidyverse)
library(here)
library(kableExtra)
library(psych)
dat_path <- 'posts/2024-01-12-syllabus-adv-multivariate-esrm-6553/Lecture07/Code'
conspiracy <- read.csv(here(dat_path, 'conspiracies.csv'))
itemResp <- conspiracy |> select(starts_with('PolConsp'))
conspiracy |> 
  mutate(ID = 1:177) |> 
  pivot_longer(starts_with('PolConsp'), names_to = 'Item', values_to = 'Resp') |> 
  mutate(Item = factor(Item, paste0('PolConsp', 1:10))) |> 
  group_by(Item) |> 
  summarise(
    Mean = mean(Resp),
    SD = sd(Resp),
    Min = min(Resp),
    Max = max(Resp),
    Skew = psych::skew(Resp)
  ) |> 
  kable(digits = 3)
```

One estimate of the internal consistency reliability of a test is <mark>Cronbach's $\alpha$</mark>, which summarizes the average item-test correlation.

The standard Cronbach's $\alpha$ is .93. The average Iter-Item Correlation is .564. Ideally, the average inter-item correlation for a set of items should be between .20 and .40, suggesting that while the items are reasonably homogenous, they do contain sufficiently unique variance so as to not be isomorphic with each other [@piedmont2014].

```{r}
#| code-summary: "Reliability by psych package"
kable(alpha(itemResp)$total, digits = 3)
```

Using factor analysis and `lavaan`, we can reproduce average inter-item correlations assuming items are tau-equavalent:

-   Item responses are standardized (mean as 0, variance as 1)

-   Factor loadings are constrained to be equal as 1

-   Residual variances of items are constrained to be equal

Then, iter-item correlation and Cronbach's alpha can be computed as:

$$
\rho = \frac{\text{Var}(\theta)}{\text{Var}(\theta)+\text{Var}(\psi)}
$$

$$
\alpha = \frac{N\rho}{\sigma^2 +(N-1)\rho}
$$

where N is sample size, $\rho$ is average iter-item correlation, and $\sigma^2$ are average item variances and equal to 1 if items are standardized.

```{r}
#| code-summary: 'iter-item correlation by lavaan'
library(lavaan)
itemResp_std <- itemResp |> 
  mutate(across(everything(), scale))
unifac_model <- '
F1 =~ 1*PolConsp1+1*PolConsp2+1*PolConsp3+1*PolConsp4+1*PolConsp5+1*PolConsp6+1*PolConsp7+1*PolConsp8+1*PolConsp9+1*PolConsp10
PolConsp1 ~~equal("e1")*PolConsp1
PolConsp2 ~~equal("e1")*PolConsp2
PolConsp3 ~~equal("e1")*PolConsp3
PolConsp4 ~~equal("e1")*PolConsp4
PolConsp5 ~~equal("e1")*PolConsp5
PolConsp6 ~~equal("e1")*PolConsp6
PolConsp7 ~~equal("e1")*PolConsp7
PolConsp8 ~~equal("e1")*PolConsp8
PolConsp9 ~~equal("e1")*PolConsp9
PolConsp10~~equal("e1")*PolConsp10
'
fit = cfa(model = unifac_model, data = itemResp_std, std.lv = FALSE)
# summary(fit)
Var_F1 = as.numeric(coef(fit)['F1~~F1'])
Var_errors= as.numeric(coef(fit)[1])
rho = Var_F1 / (Var_F1 + Var_errors) # reliability 
rho # average iter-item correlation
```

```{r}
#| code-summary: "Cronbach's alpha by lavaan"
Cron_alpha = 10*rho / (1 + (10-1)*rho )
Cron_alpha # Cronbach's alpha
```

Cronbach's alpha is related to number of items:

```{r}
#| code-summary: 'Correlation between alpha and test length'
#| code-fold: true
#| fig-align: center
library(greekLetters)  
tibble(nItems = 2:20, alpha = nItems*rho / (1 + (nItems-1)*rho )) |> 
  ggplot() +
  aes(x = nItems, y = alpha) +
  geom_point(size = 3, shape = 1) +
  geom_path(group = 1) +
  scale_x_continuous(breaks = 2:20) +
  scale_y_continuous(breaks = seq(0.7, 1, .025), limits = c(0.7, 1)) +
  labs(x = 'Retrospective Number of items', y = paste0("Cronbach's ", greeks('alpha')),
       title = 'Relationship between number of items with alpha')
```

## Scoring of Factor Analysis

In factor analysis, factor scores are computed by using factor loadings and factor correlations. In most modern statistical software (i.e., lavaan, Mplus etc), factor scores are estimated by multivariate methods that use various aspects of the reduced or unreduced correlation matrix and factor analysis coefficients [@brownConfirmatoryFactorAnalysis2015]. A frequently used method of estimating factor scores is Thurstone's (1935) least squared regression approach, although several other strategies have been developed (e.g., Bartlett, 1937; Harman, 1976; McDonald, 1982).

For confirmatory factor analysis that is identified, the scoring method discussed by Thurston (1935) and Thomson (1934) has the closed form [@ferrando2018; @skrondalRegressionFactorScores2001]:

$$
\text{EAP}(\boldsymbol{\theta}_i) = \boldsymbol{\Phi}\boldsymbol{\Lambda}'\boldsymbol{R}^{-1}\boldsymbol{X}_i=\boldsymbol{S}'\boldsymbol{R}^{-1}\boldsymbol{X}_i
$$

and $\boldsymbol{R}$ is the the estimated item correlation matrix if the $\lambda$s are standardized loadings in $\boldsymbol{\Lambda}$:

$$
\boldsymbol{R} = \boldsymbol{\Lambda}\boldsymbol{\Phi}\boldsymbol{\Lambda}'+\boldsymbol{\Psi}
$$

Where $\theta_i$ is the factor score estimate for individual $i$, and $\Phi$ is the factor correlation matrix (for example, for single factor model, $\Phi$ is 1 $\times$ 1 matrix ), $\Psi$ is $J \times J$ unique varainces of items, and $\Lambda$ is the pattern loading matrix. $\boldsymbol{S}$ is the factor loading structure matrix with the size $I \times P$ where $I$ denotes number of item and $P$ denotes number of latent factors. For unidimensional structure, $\boldsymbol{S} = \boldsymbol{\Lambda}$.

Alternatively, using [Bartlett's (1937, 1938)]{.underline} method [@skrondalRegressionFactorScores2001], factor scores can be estimated as:

$$
\text{EAP}(\theta_i) = \boldsymbol{(\Lambda'\Psi^{-1}\Lambda)^{-1}\Lambda'\Psi^{-1}X_i}
$$

### lavaan

Using the consipiracy theory data, we can calculate the factor scores based on the equation mention above using Thurston's method and compare to the estimated factor score by `lavaan`.

```{r}
#| code-summary: 'lavaan code'
model2 <- '
    F1 =~ PolConsp1+PolConsp2+PolConsp3+PolConsp4+PolConsp5+PolConsp6+PolConsp7+PolConsp8+PolConsp9+PolConsp10
'
fit2 = cfa(model = model2, data = itemResp_std, std.lv = TRUE)
summary(fit2)
```

```{r}
#| code-summary: "Thurston's and Bartlett's method"
## extract factor loadings and unique variances
lambdas = as.numeric(coef(fit2)[paste0("F1=~PolConsp", 1:10)])
Lambda = matrix(lambdas, ncol = 1)
psis = as.numeric(coef(fit2)[paste0("PolConsp", 1:10, "~~PolConsp", 1:10)])
Psi = diag(psis)

## Estimated Structural correlation matrix
R = Lambda %*% t(Lambda) + Psi

## Thurston's method
Theta_thurston = as.numeric(diag(1) %*% t(Lambda) %*% solve(R) %*% t(itemResp_std))
## Bartlett's method
Theta_bartlett = as.numeric(solve(t(Lambda) %*% solve(Psi) %*% Lambda) %*% t(Lambda) %*% solve(Psi) %*% t(itemResp_std))
Theta_lav = as.numeric(predict(fit2))

```

We can find that Thurston's method is consistent with `lavaan` 's output of factor scores:

```{r}
#| code-summary: 'Comparison'
fs = tibble(
   Thurston = Theta_thurston,
   Bartlett = Theta_bartlett,
   Theta_lav =  Theta_lav
) |> 
  pivot_longer(c(Thurston, Bartlett), names_to = "Method", values_to = "Score")
fs
ggplot(fs) +
  geom_abline(aes(slope = 1, intercept = 0), color = "grey") +
  geom_point(aes(x = Theta_lav, y = Score, color = Method, shape = Method), size = 3) +
  labs(x = "Factor score by lavaan", y = "Factor score by Thurston's and Bartlett's method") +
  scale_shape_manual(values = c(2, 1)) +
  scale_y_continuous(limits = c(-1.1, 4)) +
  scale_x_continuous(limits = c(-1.1, 4)) +
  theme_classic()
```

### Mplus 

In Mplus, latent factor score estimation can have varied methods under two condition: (1) when individual level factor scores are of interests, factor scores are estimated based on either Maximum-likelihood estimators or Bayes estimators; (2) when factor scores are used for secondary analysis (dependent variables of regression models), factor scores are viewed as one type of imputed values, thus they are also known as plausible values and estimated by Bayesian imputation and Rubin's (1978) method [@rubinMultipleImputationNonresponse1978; @vondavierWhatArePlausible2009; @asparouhovPlausibleValuesLatent2010].

Under the first condition, according to simulation study of @asparouhovPlausibleValuesLatent2010, [using ML estimators and small sample size]{.underline}, standardized errors for factor scores is underestimated. Another finding is that the larger the absolute factor score value is the larger the standard error is. This is because large absolute factor score values are generally in the tail of the factor score distribution, i.e., in a region with fewer observations.

With continuous variable, Mplus estimates factor scores as the maximum of posterior distribution of the factor (also called the *Maximum A Posterior* method), which is the same as the Regression Method for factor score estimation [@asparouhovPlausibleValuesLatent2010; @skrondalRegressionFactorScores2001]. It should be noted that, with this method, using factor scores as predictors given unbiased regression slopes, but using factor scores as dependent variables gives biased slopes. With categorical variables and the maximum-likelihood estimator, Mplus estimates factor scores as the expected value of the posterior distribution of the factor, which is also called the Expected A Posteriori (EAP) method.

::: callout-note
## Relationship between factor score and network score

The official paper will show network score is a special case of factor score.
:::
